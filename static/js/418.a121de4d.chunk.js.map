{"version":3,"file":"static/js/418.a121de4d.chunk.js","mappings":"4MAEA,EAD6B,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+xBAAmyB,KAAQ,kBAAmB,MAAS,Y,WCKv+BA,EAAyB,SAAgCC,EAAOC,GAClE,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,CAAC,EAAGJ,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLI,KAAMC,IAEV,EACAP,EAAuBQ,YAAc,yBACrC,MAA4BL,EAAAA,WAAiBH,G,sBCUvCS,EAAsBC,OAAOD,SAKnC,SAASE,IACP,SACEF,EAASG,YACTH,EAASI,eACTJ,EAASK,oBACTL,EAASM,kBACTN,EAASO,aAEb,CAcA,eAAgBf,GACd,QADmB,IAALA,IAAAA,EAAQ,CAAC,KAPrBQ,EAASQ,mBACTR,EAASS,sBACTT,EAASU,yBACTV,EAASW,qBAKiB,OAAO,KACnC,IAAAC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CT,EAAUW,EAAA,GAAEE,EAAaF,EAAA,GAChC,GAAIX,EAAY,CACd,IAAIc,EAAkBjB,EAASkB,gBAC3BD,EAAQE,kBACVF,EAAQE,oBACCF,EAAQG,wBACjBH,EAAQG,0BACCH,EAAQI,qBACjBJ,EAAQI,uBACCJ,EAAQK,qBACjBL,EAAQK,qBAEZ,MAAWpB,MACLF,EAASuB,eACXvB,EAASuB,iBACAvB,EAASwB,uBAClBxB,EAASwB,yBACAxB,EAASyB,oBAClBzB,EAASyB,sBACAzB,EAAS0B,kBAClB1B,EAAS0B,oBAGb,IAAMC,EAAS,YACRzB,KAAkBC,GACrBa,GAAc,EAElB,EASA,OAPAY,EAAAA,EAAAA,YAAU,WAER,OADA3B,OAAO4B,iBAAiB,SAAUF,GAC3B,WACL1B,OAAO6B,oBAAoB,SAAUH,GAAQ,EAC/C,CACF,KAEOI,EAAAA,EAAAA,UACL,kBACEC,EAAAA,EAAAA,KAAA,QACEC,QAAS,kBAAMjB,GAAeb,EAAY,EAC1C+B,MAAO,CAAEC,SAAU,GAAIC,YAAa,GAAIC,OAAQ,WAAYC,SAE3DnC,GAAa6B,EAAAA,EAAAA,KAACzC,EAAsB,KAAMyC,EAAAA,EAAAA,KAACO,EAAAA,EAAkB,KAEjE,GACD,CAACpC,GAEJ,C,+BClGD,WACIqC,WAAY,CAAE,GAAI,WAEtB,IAAIC,EAASC,EAAuB,EAAQ,QACxCC,EAAcD,EAAuB,EAAQ,QACjD,SAASA,EAAuBE,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,EAAO,CAMhG,OALW,WACT,OAAoBH,EAAgB,QAAEK,cAAc,MAAO,CACzDZ,MAAO,CAAC,GACMO,EAAgB,QAAEK,cAAcH,EAAqB,QAAG,MAC1E,CACc,CAVQ,IAWlBI,KAAM,CACR,GAAM,CACJ,KAAQ,GACR,KAAQ,CAAC,EACT,KAAQ,wcACR,SAAY,MACZ,MAAS,kLAGTC,OAAQ,qtB","sources":["../../../node_modules/@ant-design/icons-svg/es/asn/FullscreenExitOutlined.js","../../../node_modules/@ant-design/icons/es/icons/FullscreenExitOutlined.js","../../../packages/fullscreen/src/index.tsx","../../../packages/fullscreen/README.md"],"sourcesContent":["// This icon file is generated automatically.\nvar FullscreenExitOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M391 240.9c-.8-6.6-8.9-9.4-13.6-4.7l-43.7 43.7L200 146.3a8.03 8.03 0 00-11.3 0l-42.4 42.3a8.03 8.03 0 000 11.3L280 333.6l-43.9 43.9a8.01 8.01 0 004.7 13.6L401 410c5.1.6 9.5-3.7 8.9-8.9L391 240.9zm10.1 373.2L240.8 633c-6.6.8-9.4 8.9-4.7 13.6l43.9 43.9L146.3 824a8.03 8.03 0 000 11.3l42.4 42.3c3.1 3.1 8.2 3.1 11.3 0L333.7 744l43.7 43.7A8.01 8.01 0 00391 783l18.9-160.1c.6-5.1-3.7-9.4-8.8-8.8zm221.8-204.2L783.2 391c6.6-.8 9.4-8.9 4.7-13.6L744 333.6 877.7 200c3.1-3.1 3.1-8.2 0-11.3l-42.4-42.3a8.03 8.03 0 00-11.3 0L690.3 279.9l-43.7-43.7a8.01 8.01 0 00-13.6 4.7L614.1 401c-.6 5.2 3.7 9.5 8.8 8.9zM744 690.4l43.9-43.9a8.01 8.01 0 00-4.7-13.6L623 614c-5.1-.6-9.5 3.7-8.9 8.9L633 783.1c.8 6.6 8.9 9.4 13.6 4.7l43.7-43.7L824 877.7c3.1 3.1 8.2 3.1 11.3 0l42.4-42.3c3.1-3.1 3.1-8.2 0-11.3L744 690.4z\" } }] }, \"name\": \"fullscreen-exit\", \"theme\": \"outlined\" };\nexport default FullscreenExitOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FullscreenExitOutlinedSvg from \"@ant-design/icons-svg/es/asn/FullscreenExitOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar FullscreenExitOutlined = function FullscreenExitOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FullscreenExitOutlinedSvg\n  }));\n};\nFullscreenExitOutlined.displayName = 'FullscreenExitOutlined';\nexport default /*#__PURE__*/React.forwardRef(FullscreenExitOutlined);","import React, { useState, useMemo, useEffect } from 'react';\nimport { FullscreenOutlined, FullscreenExitOutlined } from '@ant-design/icons';\n\ninterface Documents extends Document {\n  mozFullScreen?:()=>boolean \n  webkitIsFullScreen?:()=>boolean  \n  webkitFullScreen?:()=>boolean  \n  msFullScreen?:()=>boolean  \n  webkitCancelFullScreen?:()=>void;\n  mozCancelFullScreen?:()=>void;\n  webkitRequestFullScreen?:()=>void;\n  msExitFullscreen?:()=>void;\n  mozFullScreenEnabled?:boolean\n  webkitFullscreenEnabled?:boolean\n  msFullscreenEnabled?:boolean\n}\n\ninterface HTMLDOM extends HTMLElement {\n  webkitRequestFullScreen?:()=>void\n  mozRequestFullScreen?:()=>void\n  msRequestFullscreen?:()=>void\n}\n\nconst document: Documents = window.document; \n\n/**\n * 当前是否全屏\n */\nfunction isFullScreen() {\n  return !!(\n    document.fullscreen ||\n    document.mozFullScreen ||\n    document.webkitIsFullScreen ||\n    document.webkitFullScreen ||\n    document.msFullScreen\n  );\n}\n\n/**\n * 判断当前文档是否能切换到全屏\n */\nfunction isFullscreenEnabled() {\n  return (\n    document.fullscreenEnabled ||\n    document.mozFullScreenEnabled ||\n    document.webkitFullscreenEnabled ||\n    document.msFullscreenEnabled\n  );\n}\n\nexport default (props = {}) => {\n  if (!isFullscreenEnabled()) return null;\n  const [fullscreen, setFullscreen] = useState(false);\n  if (fullscreen) {\n    let element:HTMLDOM = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.webkitRequestFullScreen) {\n      element.webkitRequestFullScreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  } else if (isFullScreen()) {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n  const handle = () => {\n    if (!isFullScreen() && fullscreen) {\n      setFullscreen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handle);\n    return () => {\n      window.removeEventListener('resize', handle, false);\n    };\n  });\n\n  return useMemo(\n    () => (\n      <span\n        onClick={() => setFullscreen(!fullscreen)}\n        style={{ fontSize: 18, marginRight: 10, cursor: 'pointer' }}\n      >\n        {fullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n      </span>\n    ),\n    [fullscreen],\n  );\n};\n","\nexport default {\n    components: { 17: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _fullscreen = _interopRequireDefault(require(\"@antdp/fullscreen\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {}\n  }, /*#__PURE__*/_react[\"default\"].createElement(_fullscreen[\"default\"], null));\n};\nreturn Demo; })(), },\n    data: {\n  \"17\": {\n    \"name\": 17,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _fullscreen = _interopRequireDefault(require(\\\"@antdp/fullscreen\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", {\\n    style: {}\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_fullscreen[\\\"default\\\"], null));\\n};\\nreturn Demo;\",\n    \"language\": \"tsx\",\n    \"value\": \"import React from 'react';\\nimport Fullscreen from '@antdp/fullscreen';\\n\\nconst Demo = () => (\\n  <div style={{ }}>\\n    <Fullscreen />\\n  </div>\\n);\\n\\nexport default Demo\"\n  }\n},\n    source: \"@antdp/fullscreen\\n---\\n\\n[![npm version](https://img.shields.io/npm/v/@antdp/fullscreen.svg?maxAge=3600)](https://www.npmjs.com/package/@antdp/fullscreen)\\n[![npm download](https://img.shields.io/npm/dm/@antdp/fullscreen.svg?style=flat)](https://www.npmjs.com/package/@antdp/fullscreen)\\n\\n设置页面全屏。\\n\\n## 安装使用\\n\\n```bash\\nnpm i @antdp/fullscreen --save\\n```\\n\\n## 基础示例预览\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```tsx  mdx:preview\\nimport React from 'react';\\nimport Fullscreen from '@antdp/fullscreen';\\n\\nconst Demo = () => (\\n  <div style={{ }}>\\n    <Fullscreen />\\n  </div>\\n);\\n\\nexport default Demo\\n```\\n\"\n  }"],"names":["FullscreenExitOutlined","props","ref","React","AntdIcon","_objectSpread","icon","FullscreenExitOutlinedSvg","displayName","document","window","isFullScreen","fullscreen","mozFullScreen","webkitIsFullScreen","webkitFullScreen","msFullScreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","_useState","useState","_useState2","_slicedToArray","setFullscreen","element","documentElement","requestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","handle","useEffect","addEventListener","removeEventListener","useMemo","_jsx","onClick","style","fontSize","marginRight","cursor","children","FullscreenOutlined","components","_react","_interopRequireDefault","_fullscreen","obj","__esModule","createElement","data","source"],"sourceRoot":""}