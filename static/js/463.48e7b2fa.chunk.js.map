{"version":3,"file":"static/js/463.48e7b2fa.chunk.js","mappings":"iIACA,WACIA,WAAY,CAAE,GAAI,WAEtB,IAEgCC,EAF5BC,GAE4BD,EAFI,EAAQ,SAESA,EAAIE,WAAaF,EAAM,CAAE,QAAWA,GADrFG,EAAW,EAAQ,OAkCvB,OAhCqB,WACnB,OAAoBF,EAAgB,QAAEG,cAAcD,EAASE,WAAY,CACvEC,QAAQ,EACRC,UAAW,CAAC,CACVC,MAAO,eACPC,KAAM,SACNC,KAAM,QACNC,aAAc,cACb,CACDH,MAAO,eACPC,KAAM,QACNC,KAAM,SACNE,QAAS,CAAC,CACRJ,MAAO,eACPK,MAAO,IAETF,aAAc,GACb,CACDH,MAAO,eACPC,KAAM,SACNC,KAAM,QACNE,QAAS,CAAC,CACRJ,MAAO,eACPK,MAAO,GACN,CACDL,MAAO,eACPK,MAAO,IAETF,aAAc,KAGpB,CACwB,CArCF,IAsClBG,KAAM,CACR,GAAM,CACJ,KAAQ,GACR,KAAQ,CAAC,EACT,KAAQ,+8BACR,SAAY,MACZ,MAAS,i7BAGTC,OAAQ,s0G","sources":["../../../packages/antdp-ui/lib/FormDetail/README.md"],"sourcesContent":["\nexport default {\n    components: { 10: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _antdpUi = require(\"@antdp/antdp-ui\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar FormDetailDemo = function FormDetailDemo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_antdpUi.FormDetail, {\n    isView: true,\n    formDatas: [{\n      label: \"备注\",\n      name: \"remark\",\n      type: \"input\",\n      initialValue: 'zz爱ff'\n    }, {\n      label: \"水果\",\n      name: \"fruit\",\n      type: \"select\",\n      options: [{\n        label: \"苹果\",\n        value: 1\n      }],\n      initialValue: 1\n    }, {\n      label: \"蔬菜\",\n      name: \"fruits\",\n      type: \"radio\",\n      options: [{\n        label: \"青菜\",\n        value: 1\n      }, {\n        label: \"黄瓜\",\n        value: 2\n      }],\n      initialValue: 2\n    }]\n  });\n};\nreturn FormDetailDemo; })(), },\n    data: {\n  \"10\": {\n    \"name\": 10,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _antdpUi = require(\\\"@antdp/antdp-ui\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar FormDetailDemo = function FormDetailDemo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_antdpUi.FormDetail, {\\n    isView: true,\\n    formDatas: [{\\n      label: \\\"备注\\\",\\n      name: \\\"remark\\\",\\n      type: \\\"input\\\",\\n      initialValue: 'zz爱ff'\\n    }, {\\n      label: \\\"水果\\\",\\n      name: \\\"fruit\\\",\\n      type: \\\"select\\\",\\n      options: [{\\n        label: \\\"苹果\\\",\\n        value: 1\\n      }],\\n      initialValue: 1\\n    }, {\\n      label: \\\"蔬菜\\\",\\n      name: \\\"fruits\\\",\\n      type: \\\"radio\\\",\\n      options: [{\\n        label: \\\"青菜\\\",\\n        value: 1\\n      }, {\\n        label: \\\"黄瓜\\\",\\n        value: 2\\n      }],\\n      initialValue: 2\\n    }]\\n  });\\n};\\nreturn FormDetailDemo;\",\n    \"language\": \"tsx\",\n    \"value\": \"import React, { useRef, useState } from 'react';\\nimport { FormDetail } from '@antdp/antdp-ui'\\n\\nconst FormDetailDemo = () => {\\n  return (\\n         <FormDetail\\n          isView={true}\\n          formDatas={[\\n            {\\n              label: \\\"备注\\\",\\n              name: \\\"remark\\\",\\n              type: \\\"input\\\",\\n              initialValue: 'zz爱ff',\\n            },\\n            {\\n              label: \\\"水果\\\",\\n              name: \\\"fruit\\\",\\n              type: \\\"select\\\",\\n              options: [{ label: \\\"苹果\\\", value: 1 }],\\n              initialValue: 1\\n            },\\n            {\\n              label: \\\"蔬菜\\\",\\n              name: \\\"fruits\\\",\\n              type: \\\"radio\\\",\\n              options: [{ label: \\\"青菜\\\", value: 1 }, { label: \\\"黄瓜\\\", value: 2 }],\\n              initialValue: 2\\n            }\\n          ]}\\n        />\\n  )\\n}\\nexport default FormDetailDemo;\"\n  }\n},\n    source: \"FormDetail 快速详情表单\\n---\\n\\n快速生成详情表单表单。\\n\\n### 基础示例\\n\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```tsx   mdx:preview\\nimport React, { useRef, useState } from 'react';\\nimport { FormDetail } from '@antdp/antdp-ui'\\n\\nconst FormDetailDemo = () => {\\n  return (\\n         <FormDetail\\n          isView={true}\\n          formDatas={[\\n            {\\n              label: \\\"备注\\\",\\n              name: \\\"remark\\\",\\n              type: \\\"input\\\",\\n              initialValue: 'zz爱ff',\\n            },\\n            {\\n              label: \\\"水果\\\",\\n              name: \\\"fruit\\\",\\n              type: \\\"select\\\",\\n              options: [{ label: \\\"苹果\\\", value: 1 }],\\n              initialValue: 1\\n            },\\n            {\\n              label: \\\"蔬菜\\\",\\n              name: \\\"fruits\\\",\\n              type: \\\"radio\\\",\\n              options: [{ label: \\\"青菜\\\", value: 1 }, { label: \\\"黄瓜\\\", value: 2 }],\\n              initialValue: 2\\n            }\\n          ]}\\n        />\\n  )\\n}\\nexport default FormDetailDemo;\\n```\\n<!--End-->\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| -------- | -------- | -------- | -------- |\\n| formDatas | 表单集合 | `Array<itemsProps & any>`  |- |\\n| collapseAttributes | antd collapse 组件属性集合 | Object | - |\\n| panelAttributes | antd collapse.panel 组件属性集合 | Object | - |\\n| visible | 折叠表单下是否初始化选中面板 | boolean | false |\\n| colspan | 表单单行排列 | number | - |\\n| header | 组件头部标题 |  `React.ReactNode` | - |\\n| defaultFormItemLayout | 自定义表单栅格宽度占比,参照 antd 栅格布局 | Object | - |\\n| defaultFormLayout | 自定义表单排列方式 | FormLayout | - |\\n| size | 尺寸 | number | - |\\n| type | 表单类型:modal ｜ cardform ｜ CardPro | string | - |\\n| extra | antd collapse.panel 自定义渲染每个面板右上角的内容 | Object | - |\\n\\n### itemsProps\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| -------- | -------- | -------- | -------- |\\n| defaultcolspan | 表单默认列span | number  |- |\\n| label | 表单元素标题 | string | - |\\n| name | 表单名称 antd from 组件 getFieldDecorator 第一个参数 | string | - |\\n| initialValue | 表单初始值 | string ｜ any | - |\\n| full | 表单是否独占一行 | boolean | - | \\n| hideInForm | 表单隐藏 |  boolean | - |\\n| attributes | input select 等表单组件属性集合 | T ｜ any | - |\\n| type |列表需要展示的其他组件，如:（Checkbox,Radio,Select等）| string ｜ undefined | - |\\n| options | ?? |  `Array<{ label: string, value: string ｜ number }>` | - |\\n| span | 设置列表的占位格数| number | - |\\n\\n\"\n  }"],"names":["components","obj","_react","__esModule","_antdpUi","createElement","FormDetail","isView","formDatas","label","name","type","initialValue","options","value","data","source"],"sourceRoot":""}