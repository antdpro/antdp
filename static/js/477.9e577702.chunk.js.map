{"version":3,"file":"static/js/477.9e577702.chunk.js","mappings":"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","sources":["../../../packages/antdp-edit-table/src/EditTable/Operation.tsx","../../../packages/antdp-edit-table/src/EditTable/Store.ts","../../../packages/antdp-edit-table/src/EditTable/Td.tsx","../../../packages/antdp-edit-table/src/EditTable/Tr.tsx","../../../packages/antdp-edit-table/src/EditTable/index.tsx","../../../packages/antdp-edit-table/src/EditTable/utils.tsx","../../../packages/antdp-edit-table/src/index.ts","../../../packages/antdp-edit-table/README.md"],"sourcesContent":["import React from 'react';\nimport { Popconfirm, Typography, Space } from 'antd';\nimport {\n  ColumnsProps,\n  EditableTableProps,\n  RefEditTableProps,\n} from './interface';\nexport type { ColumnsProps, EditableTableProps, RefEditTableProps };\n\nexport interface OperationProps {\n  multiple?: boolean;\n  rowKey: string;\n  optConfig: EditableTableProps[\"optConfig\"];\n  isEditing: (record: any) => boolean;\n  isAddEdit: (record: any) => boolean;\n  save: (key: string | number, record: any, indx: number) => Promise<void>;\n  isOptDelete?: boolean;\n  cancel: (id: string | number) => void;\n  onDelete: (id: string | number, rowItem: any, index: number) => void;\n  edit: (record: any) => void;\n  newAdd: (string | number)[];\n  editingKey: (string | number)[];\n}\n\n/** 操作列配置 */\nconst operation = ({\n  optConfig,\n  isEditing,\n  isAddEdit,\n  save,\n  isOptDelete,\n  cancel,\n  onDelete,\n  edit,\n  newAdd,\n  editingKey,\n  rowKey,\n  multiple,\n}: OperationProps): ColumnsProps[] => [\n    {\n      title: '操作',\n      align: 'center',\n      width: 120,\n      ...optConfig,\n      render: (item: any, record: any, index: number) => {\n        const editable = isEditing(record);\n        const isNewAdd = isAddEdit(record);\n        if (optConfig && optConfig.render) {\n          return optConfig.render(item, record, index, {\n            editable,\n            isNewAdd,\n            save,\n            cancel,\n            onDelete,\n            edit,\n            newAdd,\n            editingKey,\n          });\n        }\n        return editable ? (\n          <span>\n            <Typography.Link\n              onClick={() => save(record[rowKey], record, index)}\n              style={{ marginRight: 8 }}\n            >\n              保存\n            </Typography.Link>\n            <Popconfirm\n              title=\"是否取消当前行编辑?\"\n              okText=\"是\"\n              cancelText=\"否\"\n              onConfirm={\n                // 如果是新增操作的数据，进行判断 取消时使用删除方法\n                isNewAdd\n                  ? onDelete.bind(this, record[rowKey], record, index)\n                  : cancel.bind(this, record[rowKey])\n              }\n            >\n              <Typography.Link>取消</Typography.Link>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Space>\n            <Typography.Link\n              disabled={!!editingKey.length && !multiple}\n              onClick={() => edit(record)}\n            >\n              编辑\n            </Typography.Link>\n            {isOptDelete && (\n              <Popconfirm\n                title=\"是否删除当前行数据?\"\n                okText=\"是\"\n                cancelText=\"否\"\n                onConfirm={() => onDelete(record[rowKey], record, index)}\n              >\n                <Typography.Link>删除</Typography.Link>\n              </Popconfirm>\n            )}\n          </Space>\n        );\n      },\n    },\n  ];\n\nexport default operation;\n","import { FormInstance } from 'rc-field-form/lib/interface';\nimport React from \"react\"\nclass Store {\n  private store: { [s: string]: FormInstance } = {};\n  /** 移除 */\n  remove = (name: string) => {\n    delete this.store[`${name}`];\n  };\n  /** 注册 */\n  register = (name: string, form: FormInstance<any>) => {\n    this.store[`${name}`] = form;\n  };\n  /** 获取所有的 from 保存值 */\n  getStore = (): { [s: string]: FormInstance<any> } => this.store;\n\n  /** 通过 key 获取 form 表单 */\n  getToKeyForm = (key: string | number) => {\n    return this.store[`${key}`]\n  }\n\n}\n\nexport const useStore = (store?: Store) => {\n  const refs = React.useRef<Store>()\n  if (store) {\n    refs.current = store\n  } else {\n    refs.current = new Store()\n  }\n  return [refs.current]\n}\n\nexport default Store;\n","import React from 'react';\nimport { Tooltip } from 'antd';\nimport RcForm from 'rc-field-form';\nimport { getItem, getFieldId, toArray } from './utils';\nimport { ColumnsProps, EditableCellItemProps } from \"./interface\"\n\nexport interface EditableCellProps {\n  editing: boolean;\n  dataIndex: string;\n  title: ColumnsProps[\"title\"];\n  record: any;\n  index: number;\n  inputNode: ColumnsProps[\"inputNode\"];\n  rules: ColumnsProps[\"rules\"];\n  children: React.ReactNode;\n  itemAttr: ColumnsProps[\"itemAttr\"];\n  type: ColumnsProps[\"type\"];\n  attr: ColumnsProps['attr'];\n  tip: ColumnsProps[\"tip\"];\n  tipAttr: ColumnsProps[\"tipAttr\"];\n  multiple: boolean;\n  rowKey: string;\n  [x: string]: any;\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  record,\n  index,\n  inputNode,\n  rules,\n  children,\n  itemAttr,\n  type,\n  attr,\n  tip,\n  tipAttr,\n  multiple,\n  rowKey,\n  isList,\n  listAttr,\n  ...restProps\n}: EditableCellProps) => {\n\n  const renders: EditableCellItemProps[\"children\"] = getItem({ attr, type, inputNode });\n\n  const _render = () => {\n    // 使用 List 时  isList===true  && inputNode 是方法\n    if (isList && typeof inputNode === 'function') {\n      return (\n        <RcForm.List {...listAttr} name={dataIndex}>\n          {(fields, operation, meta) =>\n            inputNode(\n              fields.map((field) => ({ ...field, fieldKey: field.key })),\n              operation,\n              meta,\n            )\n          }\n        </RcForm.List>\n      );\n    }\n    return (\n      <EditableCellItem\n        {...itemAttr}\n        name={dataIndex}\n        rules={rules}\n        preName={record[rowKey]}\n        itemValue={record}\n        children={renders}\n        tipAttr={tipAttr}\n        tip={tip}\n      />\n    );\n  };\n\n  return (<td {...restProps}>{editing ? _render() : children}</td>);\n};\n\nexport const EditableCellItem = (props: EditableCellItemProps) => {\n  const {\n    name,\n    rules,\n    preName = '',\n    itemValue,\n    children,\n    tipAttr = {},\n    tip,\n    ...rest\n  } = props;\n\n  return (\n    <RcForm.Field {...rest} name={name} rules={rules}>\n      {(control, meta, form) => {\n        const mergedName = toArray(name).length && meta ? meta.name : [];\n        const fieldId = getFieldId(mergedName, preName);\n        const onChange = (event: any) => {\n          let value = event;\n          if (event && event.target) {\n            value = event.target.value;\n          }\n          control.onChange(value);\n        };\n        const childNode =\n          typeof children === 'function'\n            ? children({ ...control, id: fieldId }, meta, form, {\n              record: itemValue,\n            })\n            : React.isValidElement(children)\n              ? React.cloneElement(children as React.ReactElement, {\n                ...control,\n                onChange: onChange,\n                id: fieldId,\n              })\n              : children;\n        const errs = meta.errors.map((err) => err).join(',');\n        return (\n          <Tooltip\n            color=\"#fff\"\n            overlayInnerStyle={{ color: 'red' }}\n            {...tipAttr}\n            title={tip ? tip(errs) : errs}\n            open={!!meta.errors.length}\n          >\n            {childNode}\n          </Tooltip>\n        );\n      }}\n    </RcForm.Field>\n  );\n};\n\n\n\n\n\nexport default EditableCell;\n","import React from 'react';\nimport { FormInstance } from 'rc-field-form/lib/interface';\n\nimport RcForm from 'rc-field-form';\nimport Store from './Store';\nimport { EditFormsProps } from './interface';\n\nexport const EditForms = React.createContext<EditFormsProps>({\n  formsRef: new Store(),\n  dataSource: [],\n  rowKey: 'id',\n  onValuesChange: (\n    id: string | number,\n    form: FormInstance,\n    value: object,\n    allValue: object,\n  ) => { },\n});\n\n/** tr 表格行自定义包裹内容  */\nconst Tr = (props: any) => {\n  const [form] = RcForm.useForm();\n  const {\n    formsRef,\n    onValuesChange = () => { },\n    dataSource,\n    rowKey,\n  } = React.useContext(EditForms);\n  React.useEffect(() => {\n    return () => formsRef.remove(`${props['data-row-key']}`);\n  }, []);\n  formsRef.register(`${props['data-row-key']}`, form);\n  // 注册\n  const initValue = dataSource.find(\n    // 防止 字符串和数字进行对比\n    (item) => `${item[rowKey]}` === `${props['data-row-key']}`,\n  );\n  return (\n    <RcForm\n      onValuesChange={onValuesChange.bind(this, `${props['data-row-key']}`, form)}\n      form={form}\n      name={`${props['data-row-key']}`}\n      component={false}\n      initialValues={initValue || {}}\n    >\n      <tr {...props} />\n    </RcForm>\n  );\n};\n\nexport default Tr;\n","import React, { useState } from 'react';\nimport { Table, Button, message } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { useStore } from './Store';\nexport { default as Store } from \"./Store\"\nimport {\n  ColumnsProps,\n  EditableTableProps,\n  RefEditTableProps,\n} from './interface';\nimport { FormInstance, ValidateErrorEntity } from 'rc-field-form/lib/interface';\nimport Tr, { EditForms } from './Tr';\nimport Td, { EditableCellItem } from './Td';\nimport Operation from './Operation';\nexport type { ColumnsProps, EditableTableProps, RefEditTableProps };\nconst EditableTable = (\n  props: EditableTableProps,\n  ref: React.ForwardedRef<RefEditTableProps>,\n) => {\n  const {\n    columns,\n    dataSource = [],\n    onBeforeSave,\n    onSave,\n    rowKey = 'id',\n    optIsFirst = false,\n    optConfig = {},\n    isOptDelete = false,\n    initValue = {},\n    onValuesChange,\n    isAdd,\n    onErr,\n    multiple = false,\n    onBeforeAdd,\n    isOpt = true,\n    addBtnProps = {},\n    store,\n    ...rest\n  } = props;\n  const [formsRef] = useStore(store)\n\n\n  const [editingKey, setEditingKey] = useState<string[]>([]);\n  const [newAdd, setNewAdd] = React.useState<string[]>([]);\n  /** editingKey 和 newAdd 移出 id */\n  const removeKey = (id: string | number) => {\n    setEditingKey((arr) => arr.filter((k) => `${k}` !== `${id}`));\n    setNewAdd((arr) => arr.filter((k) => `${k}` !== `${id}`));\n  };\n\n  /** 获取行 所有编辑字段 */\n  const fields: string[] = React.useMemo(() => {\n    return columns\n      .filter((item) => {\n        return item.editable;\n      })\n      .map((item) => item.dataIndex as string);\n  }, [columns]);\n\n  /** 重置 某个表单 */\n  const restForm = (key: string | number, obj = {}) => {\n    const stores = formsRef.getStore();\n    if (stores[`${key}`]) {\n      stores[`${key}`].setFieldsValue(obj);\n    }\n  };\n\n  /** 获取某个表单 */\n  const getForm = (id: string | number) => {\n    const stores = formsRef.getStore();\n    return stores[`${id}`];\n  };\n\n  /** 判断是否编辑 */\n  const isEditing = (record: any) => editingKey.includes(`${record[rowKey]}`);\n  /** 判断是否是新增的 */\n  const isAddEdit = (record: any) => newAdd.includes(`${record[rowKey]}`);\n\n  /** 新增  */\n  const add = () => {\n    // 新增之前的调用方法\n    if (onBeforeAdd && !onBeforeAdd()) {\n      return;\n    }\n    if (newAdd.length === 1 && !multiple) {\n      message.warning('只能新增一行');\n      return;\n    }\n    if (editingKey.length === 1 && !multiple) {\n      message.warning('只能编辑一行');\n      return;\n    }\n    const id = (new Date().getTime() * Math.round(10)).toString();\n    const newItem = { ...(initValue || {}), [rowKey]: id };\n    const list = dataSource.concat([newItem]);\n    setEditingKey((arr) => arr.concat([id]));\n    setNewAdd((arr) => arr.concat([id]));\n    onSave && onSave(list, newItem);\n  };\n\n  /** 编辑 */\n  const edit = (record: any) => {\n    let obj = { ...record };\n    restForm(record[rowKey], obj);\n    setEditingKey((arr) => arr.concat([`${record[rowKey]}`]));\n  };\n\n  /** 取消编辑  */\n  const cancel = (id: string | number) => {\n    removeKey(id);\n    restForm(id, {});\n  };\n\n  /** 删除行 */\n  const onDelete = (id: string | number, rowItem: object, index: number) => {\n    const list = dataSource.filter((item) => `${item[rowKey]}` !== `${id}`);\n    removeKey(id);\n    onSave && onSave(list, rowItem, rowItem, index);\n  };\n\n  /** 保存 */\n  const save = async (key: string | number, record: object, indx: number) => {\n    try {\n      const row = await getForm(key).validateFields();\n      if (onBeforeSave && !onBeforeSave(row, record, indx)) {\n        return;\n      }\n      const newData = [...dataSource];\n      const index = newData.findIndex((item) => `${key}` === `${item[rowKey]}`);\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n      } else {\n        newData.push(row);\n      }\n      onSave && onSave(newData, row, record, indx);\n      removeKey(key);\n      getForm(key).resetFields(fields);\n    } catch (errInfo) {\n      onErr && onErr(errInfo as ValidateErrorEntity<any>);\n    }\n  };\n  /** 操作列配置 */\n  const operation: ColumnsProps[] =\n    (isOpt &&\n      Operation({\n        optConfig,\n        isEditing,\n        isAddEdit,\n        save,\n        isOptDelete,\n        cancel,\n        onDelete,\n        edit,\n        newAdd,\n        editingKey,\n        rowKey,\n        multiple,\n      })) ||\n    [];\n\n  const optColumns = optIsFirst\n    ? operation.concat(columns)\n    : columns.concat(operation);\n\n  const mergedColumns = optColumns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: any) => ({\n        record,\n        multiple,\n        rowKey,\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n        inputNode: col.inputNode,\n        rules: col.rules || [],\n        itemAttr: col.itemAttr,\n        type: col.type,\n        attr: col.attr,\n        tip: col.tip,\n        tipAttr: col.tipAttr,\n        isList: col.isList,\n        listAttr: col.listAttr,\n      }),\n    };\n  }) as ColumnsType<any>;\n  // 表单值更新 表单更新值适用单个 不使用多个\n  const onChange = (\n    id: string | number,\n    form: FormInstance,\n    value: any,\n    allValue: any,\n  ) => {\n    if (onValuesChange) {\n      const list = dataSource.map((item) => {\n        if (`${id}` === `${item[rowKey]}`) {\n          return { ...item, ...allValue };\n        }\n        return { ...item };\n      });\n      onValuesChange(list, value, allValue, id, form);\n    }\n  };\n\n  React.useImperativeHandle(\n    ref,\n    (): RefEditTableProps => ({\n      save,\n      onDelete,\n      edit,\n      cancel,\n      add,\n      isEditing,\n      editingKey,\n      newAdd,\n      forms: formsRef,\n    }),\n  );\n\n  return (\n    <React.Fragment>\n      <EditForms.Provider\n        value={{\n          formsRef,\n          onValuesChange: onChange,\n          dataSource,\n          rowKey,\n        }}\n      >\n        <Table\n          size=\"small\"\n          bordered\n          {...rest}\n          components={{\n            body: {\n              row: Tr,\n              cell: Td,\n            },\n          }}\n          rowKey={rowKey}\n          dataSource={dataSource}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={false}\n        />\n        {isAdd && (\n          <Button\n            type=\"dashed\"\n            block\n            children=\"添加一行数据\"\n            {...(addBtnProps || {})}\n            style={{ marginTop: 10, ...((addBtnProps || {}).style || {}) }}\n            onClick={add}\n          />\n        )}\n      </EditForms.Provider>\n    </React.Fragment>\n  );\n};\nconst InitEditTable = React.forwardRef(EditableTable);\n\ntype EditTableType = typeof InitEditTable\n\ninterface EditorTableProps extends EditTableType {\n  /** form 存储表单 hook */\n  useStore: typeof useStore;\n  Item: typeof EditableCellItem\n}\n\nconst EditorTable = InitEditTable as EditorTableProps\n\nEditorTable.useStore = useStore;\nEditorTable.Item = EditableCellItem;\n\nexport default EditorTable\n\n","import React from 'react';\nimport {\n  Input,\n  InputNumber,\n  AutoComplete,\n  Cascader,\n  DatePicker,\n  Rate,\n  Slider,\n  TreeSelect,\n  Select,\n  Checkbox,\n  Mentions,\n  Radio,\n  Switch,\n  TimePicker,\n  Upload,\n} from 'antd';\nimport { TextAreaProps } from 'antd/lib/input/TextArea';\nimport { CheckboxGroupProps } from 'antd/lib/checkbox/Group';\nimport { RangePickerProps } from 'antd/lib/date-picker/index';\nimport { InternalNamePath } from 'rc-field-form/lib/interface';\nimport {\n  InputProps,\n  AutoCompleteProps,\n  CascaderProps,\n  DatePickerProps,\n  RateProps,\n  SliderSingleProps,\n  TreeSelectProps,\n  InputNumberProps,\n  SelectProps,\n  CheckboxProps,\n  MentionProps,\n  RadioProps,\n  SwitchProps,\n  TimePickerProps,\n  UploadProps,\n} from 'antd';\n\nexport type ItemChildType =\n  | 'Custom'\n  | 'Input'\n  | 'InputNumber'\n  | 'TextArea'\n  | 'Select'\n  | 'AutoComplete'\n  | 'Cascader'\n  | 'Checkbox'\n  | 'DatePicker'\n  | 'Mentions'\n  | 'Radio'\n  | 'Rate'\n  | 'Slider'\n  | 'Switch'\n  | 'TimePicker'\n  | 'TreeSelect'\n  | 'Upload'\n  | 'RangePicker';\n\nexport type ItemChildAttr<T = any, K = any> =\n  | InputProps\n  | InputNumberProps\n  | SelectProps<T>\n  | AutoCompleteProps\n  | CascaderProps\n  | CheckboxProps\n  | DatePickerProps\n  | MentionProps\n  | RadioProps\n  | RateProps\n  | SliderSingleProps\n  | SwitchProps\n  | TimePickerProps\n  | TreeSelectProps<K>\n  | UploadProps\n  | TextAreaProps\n  | RangePickerProps;\n\nconst { RangePicker } = DatePicker;\n\nexport function getFieldId(\n  namePath: InternalNamePath,\n  formName?: string,\n): string | undefined {\n  if (!namePath.length) {\n    return undefined;\n  }\n  const mergedId = namePath.join('_');\n  return formName ? `${formName}_${mergedId}` : mergedId;\n}\n\nexport function toArray<T>(candidate?: T | T[] | false): T[] {\n  if (candidate === undefined || candidate === false) {\n    return [];\n  }\n  return Array.isArray(candidate) ? candidate : [candidate];\n}\n\nexport const getItem = ({ attr, type, inputNode }: {\n  attr?: Partial<ItemChildAttr<any, any>>;\n  type?: ItemChildType;\n  inputNode?: ((...arg: any[]) => React.ReactNode) | React.ReactNode;\n}) => {\n  let renderItem = undefined;\n  if (type === 'Input') {\n    const inputAttr = attr as InputProps;\n    renderItem = <Input {...inputAttr} />;\n  } else if (type === 'TextArea') {\n    const inputAttr = attr as TextAreaProps;\n    renderItem = <Input.TextArea {...inputAttr} />;\n  } else if (type === 'InputNumber') {\n    const inputAttr = attr as InputNumberProps;\n    renderItem = <InputNumber {...inputAttr} />;\n  } else if (type === 'AutoComplete') {\n    const inputAttr = attr as AutoCompleteProps;\n    renderItem = <AutoComplete {...inputAttr} />;\n  } else if (type === 'Cascader') {\n    const inputAttr = attr as CascaderProps;\n    renderItem = <Cascader {...inputAttr} />;\n  } else if (type === 'DatePicker') {\n    const inputAttr = attr as DatePickerProps;\n    renderItem = <DatePicker {...inputAttr} />;\n  } else if (type === 'Rate') {\n    const inputAttr = attr as RateProps;\n    renderItem = <Rate {...inputAttr} />;\n  } else if (type === 'Slider') {\n    const inputAttr = attr as SliderSingleProps;\n    renderItem = <Slider {...inputAttr} />;\n  } else if (type === 'TreeSelect') {\n    const inputAttr = attr as TreeSelectProps<any>;\n    renderItem = <TreeSelect {...inputAttr} />;\n  } else if (type === 'Select') {\n    const inputAttr = attr as SelectProps<any>;\n    renderItem = <Select {...inputAttr} />;\n  } else if (type === 'Checkbox') {\n    const inputAttr = attr as CheckboxGroupProps;\n    renderItem = <Checkbox.Group {...inputAttr} />;\n  } else if (type === 'Mentions') {\n    const inputAttr = attr as MentionProps;\n    renderItem = <Mentions {...inputAttr} />;\n  } else if (type === 'Radio') {\n    const inputAttr = attr as RadioProps;\n    renderItem = <Radio.Group {...inputAttr} />;\n  } else if (type === 'Switch') {\n    const inputAttr = attr as SwitchProps;\n    renderItem = <Switch {...inputAttr} />;\n  } else if (type === 'TimePicker') {\n    const inputAttr = attr as TimePickerProps;\n    renderItem = <TimePicker {...inputAttr} />;\n  } else if (type === 'Upload') {\n    const inputAttr = attr as UploadProps;\n    renderItem = <Upload {...inputAttr} />;\n  } else if (type === 'RangePicker') {\n    const inputAttr = attr as RangePickerProps;\n    renderItem = <RangePicker {...inputAttr} />;\n  } else if (type === 'Custom') {\n    renderItem = inputNode;\n  }\n  return renderItem;\n};\n","import EditTable from './EditTable';\nexport default EditTable;\nexport * from './EditTable';\n","\nexport default {\n    components: { 172: (function() { \"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _antd = require(\"antd\");\nvar _editTable = _interopRequireDefault(require(\"@antdp/edit-table\"));\nrequire(\"antd/dist/reset.css\");\nvar _excluded = [\"key\", \"name\", \"fieldKey\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar originData = [];\nfor (var i = 0; i < 5; i++) {\n  originData.push({\n    key: i.toString(),\n    name: \"Edrward \".concat(i),\n    age: 32\n    // address: `London Park no. ${i}`,\n  });\n}\n\nvar EditableTable = function EditableTable() {\n  var _React$useState = _react[\"default\"].useState(originData),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    data = _React$useState2[0],\n    setData = _React$useState2[1];\n  var _React$useState3 = _react[\"default\"].useState({\n      isAdd: true,\n      isOpt: true,\n      optIsFirst: true\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    tableProps = _React$useState4[0],\n    setTableProps = _React$useState4[1];\n  var columns = [{\n    title: 'name',\n    dataIndex: 'name',\n    width: '20%',\n    editable: true,\n    type: 'Custom',\n    inputNode: function inputNode(edit) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_antd.Input, edit);\n    }\n  }, {\n    title: 'age',\n    dataIndex: 'age',\n    width: '15%',\n    editable: true,\n    type: 'Custom',\n    rules: [{\n      required: true,\n      message: '请输入'\n    }],\n    inputNode: /*#__PURE__*/_react[\"default\"].createElement(_antd.InputNumber, null)\n  }, {\n    title: 'isList',\n    dataIndex: 'list',\n    width: '15%',\n    editable: true,\n    type: 'Custom',\n    isList: true,\n    render: function render(text) {\n      return text && (text || []).filter(function (it) {\n        return it;\n      }).map(function (ite) {\n        return ite.first;\n      }).join(',');\n    },\n    inputNode: function inputNode(fields, _ref, _ref2) {\n      var add = _ref.add,\n        remove = _ref.remove;\n      var errors = _ref2.errors;\n      return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, fields.map(function (_ref3, index) {\n        var key = _ref3.key,\n          name = _ref3.name,\n          fieldKey = _ref3.fieldKey,\n          restField = _objectWithoutProperties(_ref3, _excluded);\n        return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: {\n            marginBottom: 10\n          }\n        }, /*#__PURE__*/_react[\"default\"].createElement(_editTable[\"default\"].Item, _extends({\n          key: key\n        }, restField, {\n          name: [name, 'first'],\n          fieldKey: [fieldKey, 'first'],\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: 'Missing first name'\n          }]\n        }), /*#__PURE__*/_react[\"default\"].createElement(_antd.Input, {\n          placeholder: \"First Name\"\n        })));\n      }), /*#__PURE__*/_react[\"default\"].createElement(_antd.Form.Item, null, /*#__PURE__*/_react[\"default\"].createElement(_antd.Button, {\n        type: \"dashed\",\n        onClick: function onClick() {\n          return add();\n        }\n      }, \"Add field\"), /*#__PURE__*/_react[\"default\"].createElement(_antd.Form.ErrorList, {\n        errors: errors\n      })));\n    }\n  }, {\n    title: 'address',\n    dataIndex: 'address',\n    width: '30%',\n    editable: true,\n    type: 'Input'\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(_antd.Button, {\n    onClick: function onClick() {\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\n        isOptDelete: !tableProps.isOptDelete\n      }));\n    }\n  }, \"\\u5220\\u9664\\u6309\\u94AE\"), /*#__PURE__*/_react[\"default\"].createElement(_antd.Button, {\n    onClick: function onClick() {\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\n        isAdd: !tableProps.isAdd\n      }));\n    }\n  }, \"\\u65B0\\u589E\\u6309\\u94AE\"), /*#__PURE__*/_react[\"default\"].createElement(_antd.Button, {\n    onClick: function onClick() {\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\n        multiple: !tableProps.multiple\n      }));\n    }\n  }, \"\\u591A\\u884C\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_antd.Button, {\n    onClick: function onClick() {\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\n        optIsFirst: !tableProps.optIsFirst\n      }));\n    }\n  }, \"\\u64CD\\u4F5C\\u5217\\u524D\\u6216\\u540E\"), /*#__PURE__*/_react[\"default\"].createElement(_antd.Button, {\n    onClick: function onClick() {\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\n        isOpt: !tableProps.isOpt\n      }));\n    }\n  }, \"\\u65E0\\u64CD\\u4F5C\\u5217\"), /*#__PURE__*/_react[\"default\"].createElement(_editTable[\"default\"], _extends({\n    initValue: {\n      address: 2193\n    },\n    onValuesChange: function onValuesChange(list) {\n      return setData(list);\n    },\n    rowKey: \"key\",\n    optIsFirst: true,\n    dataSource: data,\n    columns: columns,\n    onSave: function onSave(list) {\n      return setData(list);\n    },\n    isAdd: true\n  }, tableProps)));\n};\nreturn EditableTable; })(), },\n    data: {\n  \"172\": {\n    \"name\": 172,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nfunction _typeof(obj) { \\\"@babel/helpers - typeof\\\"; return _typeof = \\\"function\\\" == typeof Symbol && \\\"symbol\\\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \\\"function\\\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }, _typeof(obj); }\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _antd = require(\\\"antd\\\");\\nvar _editTable = _interopRequireDefault(require(\\\"@antdp/edit-table\\\"));\\nrequire(\\\"antd/dist/reset.css\\\");\\nvar _excluded = [\\\"key\\\", \\\"name\\\", \\\"fieldKey\\\"];\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \\\"string\\\"); return _typeof(key) === \\\"symbol\\\" ? key : String(key); }\\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \\\"object\\\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \\\"default\\\"); if (_typeof(res) !== \\\"object\\\") return res; throw new TypeError(\\\"@@toPrimitive must return a primitive value.\\\"); } return (hint === \\\"string\\\" ? String : Number)(input); }\\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\nfunction _nonIterableRest() { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\"); }\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name; if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o); if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \\\"undefined\\\" != typeof Symbol && arr[Symbol.iterator] || arr[\\\"@@iterator\\\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\\\"return\\\"] && (_r = _i[\\\"return\\\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\nvar originData = [];\\nfor (var i = 0; i < 5; i++) {\\n  originData.push({\\n    key: i.toString(),\\n    name: \\\"Edrward \\\".concat(i),\\n    age: 32\\n    // address: `London Park no. ${i}`,\\n  });\\n}\\n\\nvar EditableTable = function EditableTable() {\\n  var _React$useState = _react[\\\"default\\\"].useState(originData),\\n    _React$useState2 = _slicedToArray(_React$useState, 2),\\n    data = _React$useState2[0],\\n    setData = _React$useState2[1];\\n  var _React$useState3 = _react[\\\"default\\\"].useState({\\n      isAdd: true,\\n      isOpt: true,\\n      optIsFirst: true\\n    }),\\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\\n    tableProps = _React$useState4[0],\\n    setTableProps = _React$useState4[1];\\n  var columns = [{\\n    title: 'name',\\n    dataIndex: 'name',\\n    width: '20%',\\n    editable: true,\\n    type: 'Custom',\\n    inputNode: function inputNode(edit) {\\n      return /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Input, edit);\\n    }\\n  }, {\\n    title: 'age',\\n    dataIndex: 'age',\\n    width: '15%',\\n    editable: true,\\n    type: 'Custom',\\n    rules: [{\\n      required: true,\\n      message: '请输入'\\n    }],\\n    inputNode: /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.InputNumber, null)\\n  }, {\\n    title: 'isList',\\n    dataIndex: 'list',\\n    width: '15%',\\n    editable: true,\\n    type: 'Custom',\\n    isList: true,\\n    render: function render(text) {\\n      return text && (text || []).filter(function (it) {\\n        return it;\\n      }).map(function (ite) {\\n        return ite.first;\\n      }).join(',');\\n    },\\n    inputNode: function inputNode(fields, _ref, _ref2) {\\n      var add = _ref.add,\\n        remove = _ref.remove;\\n      var errors = _ref2.errors;\\n      return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, fields.map(function (_ref3, index) {\\n        var key = _ref3.key,\\n          name = _ref3.name,\\n          fieldKey = _ref3.fieldKey,\\n          restField = _objectWithoutProperties(_ref3, _excluded);\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", {\\n          style: {\\n            marginBottom: 10\\n          }\\n        }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_editTable[\\\"default\\\"].Item, _extends({\\n          key: key\\n        }, restField, {\\n          name: [name, 'first'],\\n          fieldKey: [fieldKey, 'first'],\\n          rules: [{\\n            required: true,\\n            whitespace: true,\\n            message: 'Missing first name'\\n          }]\\n        }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Input, {\\n          placeholder: \\\"First Name\\\"\\n        })));\\n      }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Form.Item, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Button, {\\n        type: \\\"dashed\\\",\\n        onClick: function onClick() {\\n          return add();\\n        }\\n      }, \\\"Add field\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Form.ErrorList, {\\n        errors: errors\\n      })));\\n    }\\n  }, {\\n    title: 'address',\\n    dataIndex: 'address',\\n    width: '30%',\\n    editable: true,\\n    type: 'Input'\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Button, {\\n    onClick: function onClick() {\\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\\n        isOptDelete: !tableProps.isOptDelete\\n      }));\\n    }\\n  }, \\\"\\\\u5220\\\\u9664\\\\u6309\\\\u94AE\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Button, {\\n    onClick: function onClick() {\\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\\n        isAdd: !tableProps.isAdd\\n      }));\\n    }\\n  }, \\\"\\\\u65B0\\\\u589E\\\\u6309\\\\u94AE\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Button, {\\n    onClick: function onClick() {\\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\\n        multiple: !tableProps.multiple\\n      }));\\n    }\\n  }, \\\"\\\\u591A\\\\u884C\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Button, {\\n    onClick: function onClick() {\\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\\n        optIsFirst: !tableProps.optIsFirst\\n      }));\\n    }\\n  }, \\\"\\\\u64CD\\\\u4F5C\\\\u5217\\\\u524D\\\\u6216\\\\u540E\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_antd.Button, {\\n    onClick: function onClick() {\\n      setTableProps(_objectSpread(_objectSpread({}, tableProps), {}, {\\n        isOpt: !tableProps.isOpt\\n      }));\\n    }\\n  }, \\\"\\\\u65E0\\\\u64CD\\\\u4F5C\\\\u5217\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_editTable[\\\"default\\\"], _extends({\\n    initValue: {\\n      address: 2193\\n    },\\n    onValuesChange: function onValuesChange(list) {\\n      return setData(list);\\n    },\\n    rowKey: \\\"key\\\",\\n    optIsFirst: true,\\n    dataSource: data,\\n    columns: columns,\\n    onSave: function onSave(list) {\\n      return setData(list);\\n    },\\n    isAdd: true\\n  }, tableProps)));\\n};\\nreturn EditableTable;\",\n    \"language\": \"tsx\",\n    \"value\": \"import React from 'react';\\nimport { Input, Col, InputNumber, Button, Select ,Form} from 'antd';\\nimport EditTable from '@antdp/edit-table';\\nimport 'antd/dist/reset.css';\\nconst originData = [];\\n\\nfor (let i = 0; i < 5; i++) {\\n  originData.push({\\n    key: i.toString(),\\n    name: `Edrward ${i}`,\\n    age: 32,\\n    // address: `London Park no. ${i}`,\\n  });\\n}\\n\\nconst EditableTable =() => {\\n  const [data, setData] = React.useState(originData);\\n  const [tableProps, setTableProps] = React.useState({\\n    isAdd: true,\\n    isOpt: true,\\n    optIsFirst: true,\\n  });\\n  const columns = [\\n    {\\n      title: 'name',\\n      dataIndex: 'name',\\n      width: '20%',\\n      editable: true,\\n      type: 'Custom',\\n      inputNode: (edit) => {\\n        return <Input {...edit} />;\\n      },\\n    },\\n    {\\n      title: 'age',\\n      dataIndex: 'age',\\n      width: '15%',\\n      editable: true,\\n      type: 'Custom',\\n      rules: [{ required: true, message: '请输入' }],\\n      inputNode: <InputNumber />,\\n    },\\n    {\\n      title: 'isList',\\n      dataIndex: 'list',\\n      width: '15%',\\n      editable: true,\\n      type: 'Custom',\\n      isList: true,\\n      render: (text) => {\\n        return (\\n          text &&\\n          (text || [])\\n            .filter((it) => it)\\n            .map((ite) => ite.first)\\n            .join(',')\\n        );\\n      },\\n      inputNode: (fields, { add, remove }, { errors }) => (\\n        <>\\n          {fields.map(({ key, name, fieldKey, ...restField }, index) => (\\n            <div style={{marginBottom:10}} >\\n            <EditTable.Item\\n              key={key}\\n              {...restField}\\n              name={[name, 'first']}\\n              fieldKey={[fieldKey, 'first']}\\n              rules={[\\n                {\\n                  required: true,\\n                  whitespace: true,\\n                  message: 'Missing first name',\\n                }, \\n              ]}\\n            >\\n              <Input placeholder=\\\"First Name\\\" />\\n            </EditTable.Item>\\n            </div>\\n          ))}\\n          <Form.Item>\\n            <Button type=\\\"dashed\\\" onClick={() => add()}>\\n              Add field\\n            </Button>\\n            <Form.ErrorList errors={errors} />\\n          </Form.Item>\\n        </>\\n      ),\\n    },\\n    {\\n      title: 'address',\\n      dataIndex: 'address',\\n      width: '30%',\\n      editable: true,\\n      type: 'Input',\\n    },\\n  ];\\n  return (\\n    <div>\\n      <Button\\n        onClick={() => {\\n          setTableProps({\\n            ...tableProps,\\n            isOptDelete: !tableProps.isOptDelete,\\n          });\\n        }}\\n      >\\n        删除按钮\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, isAdd: !tableProps.isAdd });\\n        }}\\n      >\\n        新增按钮\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, multiple: !tableProps.multiple });\\n        }}\\n      >\\n        多行编辑\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, optIsFirst: !tableProps.optIsFirst });\\n        }}\\n      >\\n        操作列前或后\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, isOpt: !tableProps.isOpt });\\n        }}\\n      >\\n        无操作列\\n      </Button>\\n      <EditTable\\n        initValue={{ address: 2193 }}\\n        onValuesChange={(list) => setData(list)}\\n        rowKey=\\\"key\\\"\\n        optIsFirst={true}\\n        dataSource={data}\\n        columns={columns}\\n        onSave={(list) => setData(list)}\\n        isAdd={true}\\n        {...tableProps}\\n      />\\n    </div>\\n  );\\n};\\nexport default EditableTable\"\n  }\n},\n    source: \"EditTable 编辑表格\\n===\\n\\n### 依赖安装\\n\\n```bash\\n npm i @antdp/edit-table\\n```\\n\\n### 编辑表格 参数\\n\\n```ts\\n\\nexport interface EditableTableProps\\n  extends Omit<TableProps<any>, 'columns' | 'rowKey'> {\\n  /** 列 **/\\n  columns: ColumnsProps[];\\n  /** 保存数据 */\\n  onSave: (data: any[], row: any, record?: any, indx?: number) => void;\\n  /** 保存数据之前校验 */\\n  onBeforeSave?: (item: any, record: any, index: number) => boolean;\\n  /**主键  */\\n  rowKey: string;\\n  /** 操作列是放在首位还是最后 */\\n  optIsFirst?: boolean;\\n  /** 是否需要操作列 */\\n  isOpt?: boolean;\\n  /** 操作配置 */\\n  optConfig?: ColumnsProps;\\n  /** 操作是否需要 删除 按钮 */\\n  isOptDelete?: boolean;\\n  /** 新增初始值 */\\n  initValue?: any;\\n  /** 是否存在新增按钮 */\\n  isAdd?: boolean;\\n  /** 新增之前判断 */ \\n  onBeforeAdd?: () => boolean;\\n  /** 行报错信息 */\\n  onErr?: (err: ValidateErrorEntity<any>) => void;\\n  /** 表单值更新事件 */\\n  onValuesChange?: (\\n    /** 更新后的列表值 */\\n    list: any[],\\n    /** 当前更新字段值 */\\n    value: any,\\n    /** 当前行编辑字段值 */\\n    allValue: any,\\n    /** 当前编辑主键值 */\\n    id: string | number,\\n    /**  当前行的 form  */\\n    form: FormInstance,\\n  ) => void;\\n  /** 是否可以多行编辑 */\\n  multiple?: boolean;\\n  /** 新增按钮配置 */\\n  addBtnProps?: ButtonProps;\\n  /** form 存储表单 */\\n  store?: Store;\\n}\\n```\\n\\n### 表格 列参数\\n\\n```ts\\n// 表格 列参数\\nexport interface ColumnsProps extends ColumnType<any> {\\n  /** 是否编辑  */\\n  editable?: boolean;\\n  /** 自定义 渲染编辑组件 */\\n  inputNode?: ((...arg: any[]) => React.ReactNode) | React.ReactNode;\\n  /** 规则 */\\n  rules?: Rule[];\\n  /** formItem 表单 其他属性值*/\\n  itemAttr?: Omit<FieldProps, 'rules' | 'label' | 'name'>;\\n  /** formItem 表单 children 中组件参数*/\\n  attr?: Partial<ItemChildAttr<any, any>>;\\n  /**组件类型  */\\n  type?: ItemChildType;\\n  /** 错误提示  */\\n  tip?: (errs: string) => React.ReactNode;\\n  /** Tooltip 组件属性  */\\n  tipAttr?: TooltipProps;\\n  /** 是否是 List */\\n  isList?: boolean;\\n  /** list 组件参数 */\\n  listAttr?: Omit<ListProps, 'children' | 'name'>;\\n  /** 自定义 渲染(列原始默认的自定义渲染,加了个 other 参数，不是编辑状态下的表格渲染)  ， other 参数 只有操作列才有 */\\n  render?: (\\n    value: any,\\n    record: any,\\n    index: number,\\n    other?: OtherProps,\\n  ) => React.ReactNode | RenderedCell<any>;\\n}\\n// ColumnsProps 中  render 中的 other 参数值\\nexport interface OtherProps {\\n  /** 编辑中字段 */\\n  editingKey: any[];\\n  /** 当前行 是否编辑 */\\n  editable: boolean;\\n  /** 处于编辑状态的 新增数据 key */\\n  newAdd: any[];\\n  /** 是否新增的 */\\n  isNewAdd: boolean;\\n  /** 保存 ，key:主键 ，record：行数据，index:下标  **/\\n  save: (key: string | number, record: any, indx: number) => void;\\n  /** 取消 ， id：主键 */\\n  cancel: (id: string | number) => void;\\n  /** 删除 ，id：主键， rowItem 当前行数据 ，index:下标 */\\n  onDelete: (id: string | number, rowItem: any, index: number) => void;\\n  /** 编辑 按钮 ，record 当前行数 */\\n  edit: (record: any) => void;\\n}\\n```\\n\\n### ref 返回值\\n\\n```ts\\n// ref 值\\nexport interface RefEditTableProps {\\n  /** 保存 */\\n  save: (key: string, record: any, indx: number) => void;\\n  /** 删除 */\\n  onDelete: (id: string | number, rowItem: any, index: number) => void;\\n  /** 编辑 */\\n  edit: (record: any) => void;\\n  /** 取消编辑 */\\n  cancel: (key: string | number) => void;\\n  /** 新增 */\\n  add: () => void;\\n  /** 是否编辑中 */\\n  isEditing: (record: any) => boolean;\\n  /** 编辑 id */\\n  editingKey: (string | number)[];\\n  /** 是否编辑 新增的数据 */\\n  newAdd: (string | number)[];\\n  /** 收集 所有 表单 */\\n  forms: Store;\\n}\\n```\\n\\n### Item 组件参数\\n\\n```ts\\n/**  Item 组件  渲染的单个内部FromItem组件  */\\nexport interface EditableCellItemProps extends Omit<FieldProps, 'label'> {\\n  /** 当前行数据存储父级的name list时不用传 */\\n  preName?: string;\\n  /** 当前行的所有数据 */\\n  itemValue?: any;\\n  /** Tooltip 组件属性  */\\n  tipAttr?: TooltipProps;\\n  /** 错误提示  */\\n  tip?: (errs: string) => React.ReactNode;\\n  /** 进行覆写 方法时 新增一个 行参数 v */\\n  children?:\\n  | React.ReactNode\\n  | ((\\n    control: { [name: string]: any },\\n    meta: Meta,\\n    form: FormInstance<any>,\\n    v?: { record: any },\\n  ) => React.ReactNode);\\n}\\n```\\n\\n\\n\\n### 案例\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```tsx  mdx:preview\\nimport React from 'react';\\nimport { Input, Col, InputNumber, Button, Select ,Form} from 'antd';\\nimport EditTable from '@antdp/edit-table';\\nimport 'antd/dist/reset.css';\\nconst originData = [];\\n\\nfor (let i = 0; i < 5; i++) {\\n  originData.push({\\n    key: i.toString(),\\n    name: `Edrward ${i}`,\\n    age: 32,\\n    // address: `London Park no. ${i}`,\\n  });\\n}\\n\\nconst EditableTable =() => {\\n  const [data, setData] = React.useState(originData);\\n  const [tableProps, setTableProps] = React.useState({\\n    isAdd: true,\\n    isOpt: true,\\n    optIsFirst: true,\\n  });\\n  const columns = [\\n    {\\n      title: 'name',\\n      dataIndex: 'name',\\n      width: '20%',\\n      editable: true,\\n      type: 'Custom',\\n      inputNode: (edit) => {\\n        return <Input {...edit} />;\\n      },\\n    },\\n    {\\n      title: 'age',\\n      dataIndex: 'age',\\n      width: '15%',\\n      editable: true,\\n      type: 'Custom',\\n      rules: [{ required: true, message: '请输入' }],\\n      inputNode: <InputNumber />,\\n    },\\n    {\\n      title: 'isList',\\n      dataIndex: 'list',\\n      width: '15%',\\n      editable: true,\\n      type: 'Custom',\\n      isList: true,\\n      render: (text) => {\\n        return (\\n          text &&\\n          (text || [])\\n            .filter((it) => it)\\n            .map((ite) => ite.first)\\n            .join(',')\\n        );\\n      },\\n      inputNode: (fields, { add, remove }, { errors }) => (\\n        <>\\n          {fields.map(({ key, name, fieldKey, ...restField }, index) => (\\n            <div style={{marginBottom:10}} >\\n            <EditTable.Item\\n              key={key}\\n              {...restField}\\n              name={[name, 'first']}\\n              fieldKey={[fieldKey, 'first']}\\n              rules={[\\n                {\\n                  required: true,\\n                  whitespace: true,\\n                  message: 'Missing first name',\\n                }, \\n              ]}\\n            >\\n              <Input placeholder=\\\"First Name\\\" />\\n            </EditTable.Item>\\n            </div>\\n          ))}\\n          <Form.Item>\\n            <Button type=\\\"dashed\\\" onClick={() => add()}>\\n              Add field\\n            </Button>\\n            <Form.ErrorList errors={errors} />\\n          </Form.Item>\\n        </>\\n      ),\\n    },\\n    {\\n      title: 'address',\\n      dataIndex: 'address',\\n      width: '30%',\\n      editable: true,\\n      type: 'Input',\\n    },\\n  ];\\n  return (\\n    <div>\\n      <Button\\n        onClick={() => {\\n          setTableProps({\\n            ...tableProps,\\n            isOptDelete: !tableProps.isOptDelete,\\n          });\\n        }}\\n      >\\n        删除按钮\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, isAdd: !tableProps.isAdd });\\n        }}\\n      >\\n        新增按钮\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, multiple: !tableProps.multiple });\\n        }}\\n      >\\n        多行编辑\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, optIsFirst: !tableProps.optIsFirst });\\n        }}\\n      >\\n        操作列前或后\\n      </Button>\\n      <Button\\n        onClick={() => {\\n          setTableProps({ ...tableProps, isOpt: !tableProps.isOpt });\\n        }}\\n      >\\n        无操作列\\n      </Button>\\n      <EditTable\\n        initValue={{ address: 2193 }}\\n        onValuesChange={(list) => setData(list)}\\n        rowKey=\\\"key\\\"\\n        optIsFirst={true}\\n        dataSource={data}\\n        columns={columns}\\n        onSave={(list) => setData(list)}\\n        isAdd={true}\\n        {...tableProps}\\n      />\\n    </div>\\n  );\\n};\\nexport default EditableTable\\n```\"\n  }"],"names":["_antd","_interopRequireDefault","require","_jsxRuntime","_this","_default","_ref","optConfig","isEditing","isAddEdit","save","isOptDelete","cancel","onDelete","edit","newAdd","editingKey","rowKey","multiple","_objectSpread2","title","align","width","render","item","record","index","editable","isNewAdd","jsxs","children","jsx","Typography","Link","onClick","style","marginRight","Popconfirm","okText","cancelText","onConfirm","bind","Space","disabled","length","exports","module","default","_react","Store","_createClass2","_classCallCheck2","_defineProperty2","name","store","concat","form","key","refs","useRef","current","_rcFieldForm","_utils","_excluded","_excluded2","EditableCellItem","props","rules","_props$preName","preName","itemValue","_children","_props$tipAttr","tipAttr","tip","rest","_objectWithoutProperties2","Field","control","meta","mergedName","toArray","fieldId","getFieldId","childNode","id","isValidElement","cloneElement","onChange","event","value","target","errs","errors","map","err","join","Tooltip","color","overlayInnerStyle","open","editing","dataIndex","inputNode","itemAttr","type","attr","isList","listAttr","restProps","renders","getItem","List","fields","operation","field","fieldKey","_Store","EditForms","createContext","formsRef","dataSource","onValuesChange","allValue","_RcForm$useForm","useForm","_slicedToArray2","_React$useContext","useContext","_React$useContext$onV","useEffect","remove","register","initValue","find","component","initialValues","_interopRequireWildcard","_Tr","_Td","_Operation","EditableTable","ref","columns","_props$dataSource","onBeforeSave","onSave","_props$rowKey","_props$optIsFirst","optIsFirst","_props$optConfig","_props$isOptDelete","_props$initValue","isAdd","onErr","_props$multiple","onBeforeAdd","_props$isOpt","isOpt","_props$addBtnProps","addBtnProps","_useStore","useStore","_useState","useState","_useState2","setEditingKey","_React$useState","_React$useState2","setNewAdd","removeKey","arr","filter","k","useMemo","restForm","obj","arguments","undefined","stores","getStore","setFieldsValue","getForm","includes","add","Date","getTime","Math","round","toString","newItem","_objectSpread3","list","message","warning","rowItem","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","indx","row","newData","wrap","_context","prev","next","validateFields","sent","abrupt","_toConsumableArray2","findIndex","splice","push","resetFields","t0","stop","_x","_x2","_x3","apply","mergedColumns","col","onCell","useImperativeHandle","forms","Fragment","Provider","Table","size","bordered","components","body","cell","rowClassName","pagination","Button","block","marginTop","EditorTable","forwardRef","Item","namePath","formName","mergedId","candidate","Array","isArray","RangePicker","DatePicker","renderItem","inputAttr","Input","_inputAttr","TextArea","_inputAttr2","InputNumber","_inputAttr3","AutoComplete","_inputAttr4","Cascader","_inputAttr5","_inputAttr6","Rate","_inputAttr7","Slider","_inputAttr8","TreeSelect","_inputAttr9","Select","_inputAttr10","Checkbox","Group","_inputAttr11","Mentions","_inputAttr12","Radio","_inputAttr13","Switch","_inputAttr14","TimePicker","_inputAttr15","Upload","_inputAttr16","_EditTable","Object","keys","forEach","prototype","hasOwnProperty","call","_exportNames","defineProperty","enumerable","get","_typeof","Symbol","iterator","constructor","_editTable","__esModule","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","i","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","arg","input","hint","prim","toPrimitive","res","TypeError","String","Number","_toPrimitive","_toPropertyKey","configurable","writable","_extends","assign","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_slicedToArray","_arrayWithHoles","_i","_s","_e","_r","_arr","_n","_d","done","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","slice","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","originData","age","data","setData","_React$useState4","tableProps","setTableProps","createElement","required","text","it","ite","first","_ref2","_ref3","restField","marginBottom","whitespace","placeholder","Form","ErrorList","address"],"sourceRoot":""}