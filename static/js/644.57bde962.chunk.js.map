{"version":3,"file":"static/js/644.57bde962.chunk.js","mappings":"iIACA,WACIA,WAAY,CAAG,EACfC,KAAM,CAAC,EACPC,OAAQ,q+I","sources":["pages/quick-start/README.md"],"sourcesContent":["\nexport default {\n    components: {  },\n    data: {},\n    source: \"# 快速上手\\n\\n## 环境准备\\n首先得有 [node](https://nodejs.org/en)，并确保 `node` 版本是 14 或以上。（推荐用 [nvm](https://github.com/nvm-sh/nvm) 来管理 node 版本，windows 下推荐用 [nvm-windows](https://github.com/coreybutler/nvm-windows)）\\nmac 或 linux 下安装 nvm。\\n\\n```bash\\n$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash\\n$ nvm -v\\n0.39.1\\n```\\n\\n安装 node。\\n```bash\\n$ nvm install 16\\n$ nvm use 16\\n$ node -v\\nv16.10.0\\n```\\n\\n然后需要包管理工具。node 默认包含 npm，但也可以选择其他方案，\\n- [pnpm](https://pnpm.io/installation), umi 团队推荐\\n- [Yarn](https://yarnpkg.com/getting-started/install)\\n\\n安装 pnpm。\\n```bash\\ncurl -fsSL https://get.pnpm.io/install.sh | sh -\\n$ pnpm -v\\n7.3.0\\n```\\n\\n## 创建ts项目\\n```shell \\n# npm 6.x\\n$ npm init antdp my-app --example basic\\n# npm 7+, extra double-dash is needed:\\n$ npm init antdp my-app -- --example basic\\n\\n$ yarn create antdp [appName]\\n# or npm\\n$ npm create antdp my-app\\n# or npx\\n$ npx create-antdp my-app\\n```\\n\\n或者直接下载: [`basic.zip`](https://antdpro.github.io/antdp/zip/basic.zip)\\n\\n### 创建js项目\\n```shell\\n# npm 6.x\\n$ npm init antdp my-app --example basicjs\\n# npm 7+，extra double-dash is needed:\\n$ npm init antdp my-app -- --example basicjs\\n\\n$ yarn create antdp [appName] -- --example basicjs\\n# or npm\\n$ npm create antdp my-app -- --example basicjs\\n# or npx\\n$ npx create-antdp my-app -- --example basicjs\\n```\\n或者直接下载版本: [`basicjs.zip`](https://antdpro.github.io/antdp/zip/basicjs.zip)\\n\\n## 启动项目\\n\\n- `cd [appName]` 进入目录\\n\\n- `yarn install`下载依赖\\n\\n- `yarn start`启动项目， 项目启动成功，你就会看见如下。\\n\\n```bash\\nyarn run v1.22.17\\n$ lerna exec --scope @example/antdp-base -- npm run start\\nlerna notice cli v6.6.1\\nlerna notice filter including \\\"@example/antdp-base\\\"\\nlerna info filter [ '@example/antdp-base' ]\\nlerna info Executing command in 1 package: \\\"npm run start\\\"\\n\\n> start\\n> max dev\\n\\ninfo  - [你知道吗？] CSS 不够灵活、编写动态样式太繁琐怎么办？试试 styled-components 插件，详见 https://umijs.org/docs/max/styled-components\\ninfo  - Umi v4.0.65\\ninfo  - Preparing...\\n[HPM] Proxy created: /api/  -> https://preview.pro.ant.design\\n[HPM] Proxy rewrite rule created: \\\"^\\\" ~> \\\"\\\"\\n        ╔════════════════════════════════════════════════════╗\\n        ║ App listening at:                                  ║\\n        ║  >   Local: http://localhost:8000                  ║\\nready - ║  > Network: http://192.168.188.205:8000            ║\\n        ║                                                    ║\\n        ║ Now you can open browser with the above addresses↑ ║\\n        ╚════════════════════════════════════════════════════╝\\n```\\n\\n在浏览器里打开 http://localhost:8000/\\n\\n## 部署发布\\n执行 `yarn build` 命令，\\n\\n```bash\\n> umi build\\nevent - compiled successfully in 1179 ms (567 modules)\\nevent - build index.html\\n```\\n\\n产物默认会生成到 ./dist 目录下，\\n\\n```bash\\n./dist\\n├── index.html\\n├── umi.css\\n└── umi.js\\n```\\n\\n完成构建后，就可以把 dist 目录部署到服务器上了。\\n\\n## License\\n\\nLicensed under the MIT License.\"\n  }"],"names":["components","data","source"],"sourceRoot":""}