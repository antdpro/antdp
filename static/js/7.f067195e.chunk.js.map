{"version":3,"sources":["components/markdown/Code.jsx","components/markdown/index.jsx","../../../packages/fullscreen/README.md","../../../node_modules/@ant-design/icons-svg/es/asn/FullscreenExitOutlined.js","../../../node_modules/@ant-design/icons/es/icons/FullscreenExitOutlined.js","../../src/index.js","pages/fullscreen/index.js"],"names":["Code","dependencies","codeSandbox","other","codePen","props","codeSandboxOption","files","content","code","replace","name","description","react","devDependencies","kkt","typescript","license","scripts","start","build","test","browserslist","React","style","marginBottom","getCodeStr","data","forEach","node","type","value","children","Array","isArray","Markdown","padding","source","this","rehypePlugins","rehypeAttr","properties","components","inline","noPreview","noScroll","bgWhite","noCode","config","Object","keys","filter","undefined","length","Component","FullscreenExitOutlined","ref","AntdIcon","_objectSpread","icon","FullscreenExitOutlinedSvg","displayName","isFullScreen","document","useState","element","handle","setFullscreen","useEffect","window","useMemo","onClick","fontSize","marginRight","cursor","fullscreen","Pages","Fullscreen"],"mappings":"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","file":"static/js/7.f067195e.chunk.js","sourcesContent":["import React from 'react';\nimport CodePreview from '@uiw/react-code-preview';\n\nexport default function Code({ dependencies, codeSandbox, codePen, ...other }) {\n  const props = { ...other };\n  if (codeSandbox) {\n    props.codeSandboxOption = {\n      files: {\n        'sandbox.config.json': {\n          content: `{\n        \"template\": \"node\",\n        \"container\": {\n          \"startScript\": \"start\",\n          \"node\": \"14\"\n        }\n      }`,\n        },\n        'public/index.html': {\n          content: `<div id=\"container\"></div>`,\n        },\n        'src/index.js': {\n          content: props.code.replace(\n            '_mount_',\n            'document.getElementById(\"container\")',\n          ),\n        },\n        '.kktrc.js': {\n          content: `import webpack from \"webpack\";\\nimport lessModules from \"@kkt/less-modules\";\\nexport default (conf, env, options) => {\\nconf = lessModules(conf, env, options);\\nreturn conf;\\n};`,\n        },\n        'package.json': {\n          content: {\n            name: 'react-baidu-map-demo',\n            description: `百度地图 React 组件 - demo`,\n            dependencies: {\n              react: 'latest',\n              'react-dom': 'latest',\n              '@uiw/react-baidu-map': 'latest',\n            },\n            devDependencies: {\n              '@kkt/less-modules': '6.11.0',\n              kkt: '6.11.0',\n              typescript: '4.3.5',\n            },\n            license: 'MIT',\n            scripts: {\n              start: 'kkt start',\n              build: 'kkt build',\n              test: 'kkt test --env=jsdom',\n            },\n            browserslist: [\n              '>0.2%',\n              'not dead',\n              'not ie <= 11',\n              'not op_mini all',\n            ],\n          },\n        },\n      },\n    };\n  }\n  return (\n    <CodePreview\n      {...props}\n      dependencies={{ ...dependencies, React, ...React }}\n      style={{ marginBottom: 0 }}\n    />\n  );\n}\n","import MarkdownPreview from '@uiw/react-markdown-preview';\nimport rehypeAttr from 'rehype-attr';\nimport { Component } from 'react';\nimport Code from './Code';\n\nconst getCodeStr = (data = [], code = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.children && Array.isArray(node.children)) {\n      code += getCodeStr(node.children);\n    }\n  });\n  return code;\n};\n\nexport default class Markdown extends Component {\n  render() {\n    return (\n      <MarkdownPreview\n        style={{ padding: '20px 26px 60px 26px' }}\n        source={this.props.source}\n        rehypePlugins={[[rehypeAttr, { properties: 'attr' }]]}\n        components={{\n          /**\n           * bgWhite 设置代码预览背景白色，否则为格子背景。\n           * noCode 不显示代码编辑器。\n           * noPreview 不显示代码预览效果。\n           * noScroll 预览区域不显示滚动条。\n           * codePen 显示 Codepen 按钮，要特别注意 包导入的问题，实例中的 import 主要用于 Codepen 使用。\n           */\n          code: ({ inline, node, ...props }) => {\n            const {\n              noPreview,\n              noScroll,\n              bgWhite,\n              noCode,\n              codePen,\n              codeSandbox,\n            } = props;\n            if (inline) {\n              return <code {...props} />;\n            }\n            const config = {\n              noPreview,\n              noScroll,\n              bgWhite,\n              noCode,\n              codePen,\n              codeSandbox,\n            };\n            if (\n              Object.keys(config).filter((name) => config[name] !== undefined)\n                .length === 0\n            ) {\n              return <code {...props} />;\n            }\n            return (\n              <Code\n                code={getCodeStr(node.children)}\n                dependencies={this.props.dependencies}\n                {...{\n                  noPreview,\n                  noScroll,\n                  bgWhite,\n                  noCode,\n                  codePen,\n                  codeSandbox,\n                }}\n              />\n            );\n          },\n        }}\n      />\n    );\n  }\n}\n","export default \"@antdp/fullscreen\\n---\\n\\n[![npm](https://img.shields.io/npm/v/@antdp/fullscreen.svg?maxAge=3600)](https://www.npmjs.com/package/@antdp/fullscreen)\\n\\n设置页面全屏。\\n\\n## 安装使用\\n\\n```bash\\nnpm i @antdp/fullscreen --save\\n```\\n\\n## 基础示例预览\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport Fullscreen from '@antdp/fullscreen';\\n\\nconst Demo = () => (\\n  <div style={{ }}>\\n    <Fullscreen />\\n  </div>\\n);\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\";","// This icon file is generated automatically.\nvar FullscreenExitOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M391 240.9c-.8-6.6-8.9-9.4-13.6-4.7l-43.7 43.7L200 146.3a8.03 8.03 0 00-11.3 0l-42.4 42.3a8.03 8.03 0 000 11.3L280 333.6l-43.9 43.9a8.01 8.01 0 004.7 13.6L401 410c5.1.6 9.5-3.7 8.9-8.9L391 240.9zm10.1 373.2L240.8 633c-6.6.8-9.4 8.9-4.7 13.6l43.9 43.9L146.3 824a8.03 8.03 0 000 11.3l42.4 42.3c3.1 3.1 8.2 3.1 11.3 0L333.7 744l43.7 43.7A8.01 8.01 0 00391 783l18.9-160.1c.6-5.1-3.7-9.4-8.8-8.8zm221.8-204.2L783.2 391c6.6-.8 9.4-8.9 4.7-13.6L744 333.6 877.7 200c3.1-3.1 3.1-8.2 0-11.3l-42.4-42.3a8.03 8.03 0 00-11.3 0L690.3 279.9l-43.7-43.7a8.01 8.01 0 00-13.6 4.7L614.1 401c-.6 5.2 3.7 9.5 8.8 8.9zM744 690.4l43.9-43.9a8.01 8.01 0 00-4.7-13.6L623 614c-5.1-.6-9.5 3.7-8.9 8.9L633 783.1c.8 6.6 8.9 9.4 13.6 4.7l43.7-43.7L824 877.7c3.1 3.1 8.2 3.1 11.3 0l42.4-42.3c3.1-3.1 3.1-8.2 0-11.3L744 690.4z\" } }] }, \"name\": \"fullscreen-exit\", \"theme\": \"outlined\" };\nexport default FullscreenExitOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FullscreenExitOutlinedSvg from \"@ant-design/icons-svg/es/asn/FullscreenExitOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FullscreenExitOutlined = function FullscreenExitOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FullscreenExitOutlinedSvg\n  }));\n};\n\nFullscreenExitOutlined.displayName = 'FullscreenExitOutlined';\nexport default /*#__PURE__*/React.forwardRef(FullscreenExitOutlined);","import React, { useState, useMemo, useEffect } from 'react';\nimport { FullscreenOutlined, FullscreenExitOutlined } from '@ant-design/icons';\n\n/**\n * 当前是否全屏\n */\nfunction isFullScreen() {\n  return !!(\n    document.fullscreen ||\n    document.mozFullScreen ||\n    document.webkitIsFullScreen ||\n    document.webkitFullScreen ||\n    document.msFullScreen\n  );\n}\n\n/**\n * 判断当前文档是否能切换到全屏\n */\nfunction isFullscreenEnabled() {\n  return (\n    document.fullscreenEnabled ||\n    document.mozFullScreenEnabled ||\n    document.webkitFullscreenEnabled ||\n    document.msFullscreenEnabled\n  );\n}\n\nexport default (props = {}) => {\n  if (!isFullscreenEnabled()) return null;\n  const [fullscreen, setFullscreen] = useState(false);\n  if (fullscreen) {\n    let element = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.webkitRequestFullScreen) {\n      element.webkitRequestFullScreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    }\n  } else if (isFullScreen()) {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitCancelFullScreen) {\n      document.webkitCancelFullScreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n  const handle = () => {\n    if (!isFullScreen() && fullscreen) {\n      setFullscreen(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handle);\n    return () => {\n      window.removeEventListener('resize', handle, false);\n    };\n  });\n\n  return useMemo(\n    () => (\n      <span\n        onClick={() => setFullscreen(!fullscreen)}\n        style={{ fontSize: 18, marginRight: 10, cursor: 'pointer' }}\n      >\n        {fullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n      </span>\n    ),\n    [fullscreen],\n  );\n};\n","import str from '@antdp/fullscreen/README.md';\nimport Fullscreen from '@antdp/fullscreen';\nimport Markdown from '../../components/markdown';\n\nexport default function Pages() {\n  return <Markdown source={str} dependencies={{ Fullscreen }} />;\n}\n"],"sourceRoot":""}