{"version":3,"file":"static/js/757.4a2fadc1.chunk.js","mappings":"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","sources":["../../../packages/document-title/src/index.tsx","../../../packages/user-login/src/component/accountLogin.tsx","../../../packages/user-login/src/component/phoneLogin.tsx","../../../packages/user-login/src/defaultItem.tsx","../../../packages/user-login/src/index.tsx","../../../packages/user-login/README.md"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\n\nexport interface DocumentTitle {\n  title?: string;\n  children?: React.ReactNode;\n}\n\nexport default (props: DocumentTitle = {}) => {\n  useEffect(() => {\n    document.title = props.title || '';\n  }, [props.title]);\n  return <Fragment>\n    {React.Children.toArray(props.children).map((child) => {\n      if (!React.isValidElement(child)) return null;\n      return React.cloneElement(child, { ...(child.props || {}) });\n    })}\n  </Fragment>;\n};\n","import React from 'react';\nimport { Form, Input, Button, Row, } from 'antd';\nimport { UserLoginProps } from \"./../index\"\nconst AccountLogin = (props: {\n  data: Omit<UserLoginProps, \"projectName\" | \"logo\" | \"className\" | \"children\">,\n  submitType: string | number\n}) => {\n  const { data: { formItems, formBtns, loading, formChildren, onFinish, phoneFormItems, phoneCodeProps, onSend, ...otherProps }, submitType } = props;\n  const onSubmit = (value: any) => onFinish && onFinish(value, submitType)\n\n  return (\n    <Form\n      className=\"antdp-login-form\"\n      initialValues={{ remember: true }}\n      {...otherProps}\n      onFinish={onSubmit}\n    >\n      {Array.isArray(formItems) &&\n        formItems.map((item, index: number) => {\n          const { inputProps, render, ...formItemProps } = item;\n          if (render) {\n            return render;\n          }\n          return (\n            <Form.Item key={index} {...formItemProps}>\n              {inputProps && <Input disabled={loading} {...inputProps} />}\n            </Form.Item>\n          );\n        })}\n      {formChildren}\n      <Form.Item>\n        <Row align=\"middle\" justify=\"center\">\n          {Array.isArray(formBtns) &&\n            formBtns.map((item: any, index: number) => {\n              const { label, attr } = item;\n              if (attr && attr.htmlType === 'submit') {\n                attr.loading = loading;\n              }\n              return (\n                <Button key={index} {...attr}>\n                  {label}\n                </Button>\n              );\n            })}\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AccountLogin;\n","import React from 'react';\nimport { Form, Input, Button, Row } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { InputCount } from '@antdp/antdp-ui';\nimport '../index.css';\nimport { UserLoginProps } from \"./../index\"\n\ndeclare const ValidateStatuses: [\"success\", \"warning\", \"error\", \"validating\", \"\"];\nexport declare type ValidateStatus = typeof ValidateStatuses[number];\n\nconst PhoneLogin = (props: {\n  data: Omit<UserLoginProps, \"projectName\" | \"logo\" | \"className\" | \"children\">,\n  submitType: string | number\n}) => {\n  const {\n    data: {\n      phoneFormItems,\n      phoneCodeProps,\n      onSend,\n      formBtns,\n      loading,\n      formChildren,\n      onFinish,\n      formItems,\n      ...otherProps\n    },\n    submitType\n  } = props;\n\n  const onSubmit = (value: any) => onFinish && onFinish(value, submitType)\n\n  return (\n    <Form\n      className=\"antdp-login-form\"\n      initialValues={{ remember: true }}\n      {...otherProps}\n      onFinish={onSubmit}\n    >\n      {Array.isArray(phoneFormItems) &&\n        phoneFormItems.map((item, index: number) => {\n          const { inputProps, render, ...formItemProps } = item;\n          if (render) {\n            return render;\n          }\n          return (\n            <Form.Item key={index} {...formItemProps}>\n              {inputProps && <Input disabled={loading} {...inputProps} />}\n            </Form.Item>\n          );\n        })}\n      <Form.Item {...phoneCodeProps}>\n        <InputCount\n          onSend={onSend}\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"请输入验证码\"\n          autoComplete=\"true\"\n        />\n      </Form.Item>\n      {formChildren}\n      <Form.Item>\n        <Row align=\"middle\" justify=\"center\">\n          {Array.isArray(formBtns) &&\n            formBtns.map((item: any, index: number) => {\n              const { label, attr } = item;\n              console.log('label, attr: ', label, attr);\n              if (attr && attr.htmlType === 'submit') {\n                attr.loading = loading;\n              }\n              return (\n                <Button key={index} {...attr}>\n                  {label}\n                </Button>\n              );\n            })}\n        </Row>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default PhoneLogin;\n","import React from 'react';\nimport { UserOutlined, LockOutlined, PhoneOutlined } from '@ant-design/icons';\nexport const DefaultItems = {\n  projectName: '项目管理后台',\n  loading: false,\n  logo: null,\n  formItems: [\n    {\n      name: 'username',\n      rules: [{ required: true, message: '请输入用户名!' }],\n      inputProps: {\n        prefix: <UserOutlined className=\"site-form-item-icon\" />,\n        placeholder: '请输入用户名',\n      },\n    },\n    {\n      name: 'password',\n      rules: [{ required: true, message: '请输入密码!' }],\n      inputProps: {\n        prefix: <LockOutlined className=\"site-form-item-icon\" />,\n        placeholder: '请输入密码',\n        autoComplete: 'true',\n        type: 'password',\n      },\n    },\n  ],\n  formBtns: [\n    {\n      label: '登录',\n      attr: {\n        type: 'primary',\n        htmlType: 'submit',\n      },\n    },\n  ],\n  phoneFormItems: [\n    {\n      name: 'phone',\n      rules: [{ required: true, message: '请输入手机号!' }],\n      inputProps: {\n        prefix: <PhoneOutlined className=\"site-form-item-icon\" />,\n        placeholder: '请输入手机号',\n        autoComplete: 'true',\n        type: 'password',\n      },\n    },\n  ],\n  phoneCodeProps: {\n    name: 'code',\n    rules: [{ required: true, message: '请输入验证码!' }],\n  },\n}","import React, { useState, useImperativeHandle, forwardRef, useMemo } from 'react';\nimport { Radio, ButtonProps, FormItemProps, FormProps, InputProps } from 'antd';\nimport DocumentTitle from '@antdp/document-title';\nimport AccountLogin from './component/accountLogin';\nimport PhoneLogin from './component/phoneLogin';\nimport { DefaultItems } from \"./defaultItem\"\nimport './index.css';\n\nexport interface UserLoginProps extends Omit<FormProps, \"onFinish\"> {\n  /**logo*/\n  logo?: string;\n  /**项目名称*/\n  projectName?: string;\n  className?: string,\n  /**登录类型*/\n  type?: \"account\" | \"phone\",\n  children?: React.ReactNode,\n  /**账号登录设置的formItem*/\n  formItems?: ({ render?: React.ReactNode, inputProps?: InputProps } & FormItemProps)[],\n  /**表单操作按钮*/\n  formBtns?: { label?: React.ReactNode, attr?: ButtonProps }[],\n  /**加载状态*/\n  loading?: boolean,\n  /**表单提交*/\n  onFinish?: (value: any, submitType: string | number) => void,\n  /**自定义form表单内渲染*/\n  formChildren?: React.ReactNode,\n  /**手机号登录设置的 formItem 项*/\n  phoneFormItems?: UserLoginProps[\"formItems\"],\n  /**手机号FormItem 属性*/\n  phoneCodeProps?: FormItemProps,\n  /**发送验证码*/\n  onSend?: () => void,\n\n  /**外层样式**/\n  warpStyle?: React.CSSProperties\n  /**标题样式*/\n  titleStyle?: React.CSSProperties\n}\n\n\ninterface RadioButtonProps {\n  onChange: (value: string) => void,\n  value: string\n}\n\nconst RadioButton = (props: RadioButtonProps) => {\n  return (\n    <Radio.Group\n      value={props.value}\n      options={[\n        { label: \"账号登陆\", value: \"account\" },\n        { label: \"手机登陆\", value: \"phone\" },\n      ]}\n      onChange={(event) => props.onChange(event.target.value)}\n    />\n  )\n}\n\n\nconst BaseLayout = forwardRef((props: UserLoginProps, ref) => {\n  const [submitType, setSubmitType] = useState<string>(\"account\")\n  const newData = { ...DefaultItems, ...props } as UserLoginProps\n\n  const {\n    logo,\n    projectName,\n    className,\n    children,\n    // 登陆页面类型\n    type,\n    warpStyle,\n    titleStyle,\n    ...rest\n  } = newData;\n\n  useImperativeHandle(ref, () => submitType);\n\n  const isType = useMemo(() => {\n    return [\"account\", \"phone\"].includes(type || \"\")\n  }, [type])\n\n  return (\n    <DocumentTitle title={`用户登录 - ${projectName || ''}`}>\n      <div className={`antdp-login ${className || ''}`} style={warpStyle} >\n        <div className=\"antdp-login-title\" style={titleStyle} >\n          {!!logo && <img src={logo} alt=\"logo\" />}\n          {projectName && <h1>{projectName}</h1>}\n        </div>\n        {isType ? <React.Fragment /> : <RadioButton onChange={(value) => setSubmitType(value)} value={submitType} />}\n        {(type === \"account\" || (!isType && submitType === \"account\")) ? <AccountLogin submitType={submitType} data={{ ...rest, type }} /> : <React.Fragment />}\n        {(type === \"phone\" || (!isType && submitType === \"phone\")) ? <PhoneLogin submitType={submitType} data={{ ...rest, type }} /> : <React.Fragment />}\n        {children}\n      </div>\n    </DocumentTitle>\n  );\n})\n\nexport default BaseLayout\n","\nexport default {\n    components: { 17: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _userLogin = _interopRequireDefault(require(\"@antdp/user-login\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(_userLogin[\"default\"], {\n    warpStyle: {\n      minHeight: \"300px\"\n    },\n    projectName: \"Ant Design\",\n    loading: props.loading,\n    onFinish: function onFinish(values, submitType) {\n      console.log(\"打印保存参数---->\", value, submitType);\n    },\n    onSend: function onSend() {\n      return console.log('短信验证回调');\n    },\n    formBtns: [{\n      label: '登录',\n      attr: {\n        type: 'primary',\n        htmlType: 'submit',\n        style: {\n          marginRight: 20\n        }\n      }\n    }, {\n      label: '重置',\n      attr: {\n        type: 'primary'\n      }\n    }]\n  });\n};\nreturn Demo; })(),57: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _userLogin = _interopRequireDefault(require(\"@antdp/user-login\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(_userLogin[\"default\"], {\n    warpStyle: {\n      minHeight: \"300px\"\n    },\n    projectName: \"Ant Design\",\n    loading: props.loading,\n    onFinish: function onFinish(values) {\n      console.log(\"打印保存参数---->\", values);\n    },\n    type: \"account\",\n    formBtns: [{\n      label: '登录',\n      attr: {\n        type: 'primary',\n        htmlType: 'submit',\n        style: {\n          marginRight: 20\n        }\n      }\n    }, {\n      label: '重置',\n      attr: {\n        type: 'primary'\n      }\n    }]\n  });\n};\nreturn Demo; })(),97: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _userLogin = _interopRequireDefault(require(\"@antdp/user-login\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo(props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(_userLogin[\"default\"], {\n    warpStyle: {\n      minHeight: \"300px\"\n    },\n    projectName: \"Ant Design\",\n    loading: props.loading,\n    onFinish: function onFinish(values) {\n      console.log(\"打印保存参数---->\", values);\n    },\n    type: \"phone\",\n    onSend: function onSend() {\n      return console.log('短信验证回调');\n    },\n    formBtns: [{\n      label: '登录',\n      attr: {\n        type: 'primary',\n        htmlType: 'submit',\n        style: {\n          marginRight: 20\n        }\n      }\n    }, {\n      label: '重置',\n      attr: {\n        type: 'primary'\n      }\n    }]\n  });\n};\nreturn Demo; })(), },\n    data: {\n  \"17\": {\n    \"name\": 17,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _userLogin = _interopRequireDefault(require(\\\"@antdp/user-login\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo(props) {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_userLogin[\\\"default\\\"], {\\n    warpStyle: {\\n      minHeight: \\\"300px\\\"\\n    },\\n    projectName: \\\"Ant Design\\\",\\n    loading: props.loading,\\n    onFinish: function onFinish(values, submitType) {\\n      console.log(\\\"打印保存参数---->\\\", value, submitType);\\n    },\\n    onSend: function onSend() {\\n      return console.log('短信验证回调');\\n    },\\n    formBtns: [{\\n      label: '登录',\\n      attr: {\\n        type: 'primary',\\n        htmlType: 'submit',\\n        style: {\\n          marginRight: 20\\n        }\\n      }\\n    }, {\\n      label: '重置',\\n      attr: {\\n        type: 'primary'\\n      }\\n    }]\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"tsx\",\n    \"value\": \"import React, { useRef } from 'react';\\nimport UserLogin from '@antdp/user-login';\\n\\nconst Demo= (props) => {\\n  return (\\n    <UserLogin\\n      warpStyle={{minHeight:\\\"300px\\\"}}\\n      projectName=\\\"Ant Design\\\"\\n      loading={props.loading}\\n      onFinish={(values,submitType) => {\\n        console.log(\\\"打印保存参数---->\\\",value,submitType)\\n      }}\\n      onSend={() => console.log('短信验证回调')}\\n      formBtns={[\\n        {\\n          label: '登录',\\n          attr: {\\n            type: 'primary',\\n            htmlType: 'submit',\\n            style: {\\n              marginRight: 20,\\n            },\\n          },\\n        },\\n        {\\n          label: '重置',\\n          attr: {\\n            type: 'primary',\\n          },\\n        },\\n      ]}\\n    />\\n  )\\n}\\nexport default Demo;\"\n  },\n  \"57\": {\n    \"name\": 57,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _userLogin = _interopRequireDefault(require(\\\"@antdp/user-login\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo(props) {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_userLogin[\\\"default\\\"], {\\n    warpStyle: {\\n      minHeight: \\\"300px\\\"\\n    },\\n    projectName: \\\"Ant Design\\\",\\n    loading: props.loading,\\n    onFinish: function onFinish(values) {\\n      console.log(\\\"打印保存参数---->\\\", values);\\n    },\\n    type: \\\"account\\\",\\n    formBtns: [{\\n      label: '登录',\\n      attr: {\\n        type: 'primary',\\n        htmlType: 'submit',\\n        style: {\\n          marginRight: 20\\n        }\\n      }\\n    }, {\\n      label: '重置',\\n      attr: {\\n        type: 'primary'\\n      }\\n    }]\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"tsx\",\n    \"value\": \"import React, { useRef } from 'react';\\nimport UserLogin from '@antdp/user-login';\\n\\nconst Demo= (props) => {\\n  return (\\n    <UserLogin\\n      warpStyle={{minHeight:\\\"300px\\\"}}\\n      projectName=\\\"Ant Design\\\"\\n      loading={props.loading}\\n      onFinish={(values) => {\\n       console.log(\\\"打印保存参数---->\\\",values)\\n      }}\\n      type=\\\"account\\\"\\n      formBtns={[\\n        {\\n          label: '登录',\\n          attr: {\\n            type: 'primary',\\n            htmlType: 'submit',\\n            style: {\\n              marginRight: 20,\\n            },\\n          },\\n        },\\n        {\\n          label: '重置',\\n          attr: {\\n            type: 'primary',\\n          },\\n        },\\n      ]}\\n    />\\n  )\\n}\\nexport default Demo;\"\n  },\n  \"97\": {\n    \"name\": 97,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _userLogin = _interopRequireDefault(require(\\\"@antdp/user-login\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo(props) {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_userLogin[\\\"default\\\"], {\\n    warpStyle: {\\n      minHeight: \\\"300px\\\"\\n    },\\n    projectName: \\\"Ant Design\\\",\\n    loading: props.loading,\\n    onFinish: function onFinish(values) {\\n      console.log(\\\"打印保存参数---->\\\", values);\\n    },\\n    type: \\\"phone\\\",\\n    onSend: function onSend() {\\n      return console.log('短信验证回调');\\n    },\\n    formBtns: [{\\n      label: '登录',\\n      attr: {\\n        type: 'primary',\\n        htmlType: 'submit',\\n        style: {\\n          marginRight: 20\\n        }\\n      }\\n    }, {\\n      label: '重置',\\n      attr: {\\n        type: 'primary'\\n      }\\n    }]\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"tsx\",\n    \"value\": \"import React, { useRef } from 'react';\\nimport UserLogin from '@antdp/user-login';\\n\\nconst Demo= (props) => {\\n  return (\\n    <UserLogin\\n      warpStyle={{minHeight:\\\"300px\\\"}}\\n      projectName=\\\"Ant Design\\\"\\n      loading={props.loading}\\n      onFinish={(values) => {\\n       console.log(\\\"打印保存参数---->\\\",values)\\n      }}\\n      type=\\\"phone\\\"\\n      onSend={() => console.log('短信验证回调')}\\n      formBtns={[\\n        {\\n          label: '登录',\\n          attr: {\\n            type: 'primary',\\n            htmlType: 'submit',\\n            style: {\\n              marginRight: 20,\\n            },\\n          },\\n        },\\n        {\\n          label: '重置',\\n          attr: {\\n            type: 'primary',\\n          },\\n        },\\n      ]}\\n    />\\n  )\\n}\\nexport default Demo;\"\n  }\n},\n    source: \"@antdp/user-login\\n---\\n\\n[![npm](https://img.shields.io/npm/v/@antdp/user-login.svg?maxAge=3600)](https://www.npmjs.com/package/@antdp/user-login)\\n[![npm download](https://img.shields.io/npm/dm/@antdp/user-login.svg?style=flat)](https://www.npmjs.com/package/@antdp/user-login)\\n\\n登录界面\\n\\n## Installation\\n\\n```bash\\nnpm i @antdp/user-login --save\\n```\\n\\n## 基本使用\\n\\n```tsx  mdx:preview\\nimport React, { useRef } from 'react';\\nimport UserLogin from '@antdp/user-login';\\n\\nconst Demo= (props) => {\\n  return (\\n    <UserLogin\\n      warpStyle={{minHeight:\\\"300px\\\"}}\\n      projectName=\\\"Ant Design\\\"\\n      loading={props.loading}\\n      onFinish={(values,submitType) => {\\n        console.log(\\\"打印保存参数---->\\\",value,submitType)\\n      }}\\n      onSend={() => console.log('短信验证回调')}\\n      formBtns={[\\n        {\\n          label: '登录',\\n          attr: {\\n            type: 'primary',\\n            htmlType: 'submit',\\n            style: {\\n              marginRight: 20,\\n            },\\n          },\\n        },\\n        {\\n          label: '重置',\\n          attr: {\\n            type: 'primary',\\n          },\\n        },\\n      ]}\\n    />\\n  )\\n}\\nexport default Demo;\\n```\\n\\n## 账号登录\\n\\n```tsx  mdx:preview\\nimport React, { useRef } from 'react';\\nimport UserLogin from '@antdp/user-login';\\n\\nconst Demo= (props) => {\\n  return (\\n    <UserLogin\\n      warpStyle={{minHeight:\\\"300px\\\"}}\\n      projectName=\\\"Ant Design\\\"\\n      loading={props.loading}\\n      onFinish={(values) => {\\n       console.log(\\\"打印保存参数---->\\\",values)\\n      }}\\n      type=\\\"account\\\"\\n      formBtns={[\\n        {\\n          label: '登录',\\n          attr: {\\n            type: 'primary',\\n            htmlType: 'submit',\\n            style: {\\n              marginRight: 20,\\n            },\\n          },\\n        },\\n        {\\n          label: '重置',\\n          attr: {\\n            type: 'primary',\\n          },\\n        },\\n      ]}\\n    />\\n  )\\n}\\nexport default Demo;\\n```\\n\\n## 手机号登录\\n\\n```tsx  mdx:preview\\nimport React, { useRef } from 'react';\\nimport UserLogin from '@antdp/user-login';\\n\\nconst Demo= (props) => {\\n  return (\\n    <UserLogin\\n      warpStyle={{minHeight:\\\"300px\\\"}}\\n      projectName=\\\"Ant Design\\\"\\n      loading={props.loading}\\n      onFinish={(values) => {\\n       console.log(\\\"打印保存参数---->\\\",values)\\n      }}\\n      type=\\\"phone\\\"\\n      onSend={() => console.log('短信验证回调')}\\n      formBtns={[\\n        {\\n          label: '登录',\\n          attr: {\\n            type: 'primary',\\n            htmlType: 'submit',\\n            style: {\\n              marginRight: 20,\\n            },\\n          },\\n        },\\n        {\\n          label: '重置',\\n          attr: {\\n            type: 'primary',\\n          },\\n        },\\n      ]}\\n    />\\n  )\\n}\\nexport default Demo;\\n```\\n\\n## Props\\n\\n```typescript\\nimport React from 'react';\\nimport { FormProps, FormItemProps,InputProps } from 'antd/lib/form';\\n\\nexport interface UserLoginProps extends Omit<FormProps, \\\"onFinish\\\"> {\\n  /**logo*/\\n  logo?: string;\\n  /**项目名称*/\\n  projectName?: string;\\n  className?: string,\\n  /**登录类型*/\\n  type?: \\\"account\\\" | \\\"phone\\\",\\n  children?: React.ReactNode,\\n  /**账号登录设置的formItem*/\\n  formItems?: ({ render?: React.ReactNode, inputProps?: InputProps } & FormItemProps)[],\\n  /**表单操作按钮*/\\n  formBtns?: { label?: React.ReactNode, attr?: ButtonProps }[],\\n  /**加载状态*/\\n  loading?: boolean,\\n  /**表单提交*/\\n  onFinish?: (value: any, submitType: string | number) => void,\\n  /**自定义form表单内渲染*/\\n  formChildren?: React.ReactNode,\\n  /**手机号登录设置的 formItem 项*/\\n  phoneFormItems?: UserLoginProps[\\\"formItems\\\"],\\n  /**手机号FormItem 属性*/\\n  phoneCodeProps?: FormItemProps,\\n  /**发送验证码*/\\n  onSend?: () => void,\\n  /**外层样式**/\\n  warpStyle?: React.CSSProperties\\n  /**标题样式*/\\n  titleStyle?: React.CSSProperties\\n}\\n\\n```\\n\"\n  }"],"names":["props","useEffect","document","title","_jsx","Fragment","children","React","map","child","_extends","_props$data","data","formItems","formBtns","loading","formChildren","onFinish","submitType","otherProps","_objectWithoutPropertiesLoose","_excluded","_jsxs","Form","className","initialValues","remember","value","Array","isArray","item","index","inputProps","render","formItemProps","_excluded2","Input","disabled","Row","align","justify","label","attr","htmlType","Button","phoneFormItems","phoneCodeProps","onSend","InputCount","prefix","LockOutlined","placeholder","autoComplete","console","log","DefaultItems","projectName","logo","name","rules","required","message","UserOutlined","type","PhoneOutlined","RadioButton","Radio","options","onChange","event","target","forwardRef","ref","_useState","useState","_useState2","_slicedToArray","setSubmitType","newData","warpStyle","titleStyle","rest","useImperativeHandle","isType","useMemo","includes","DocumentTitle","style","src","alt","AccountLogin","PhoneLogin","components","_react","_interopRequireDefault","_userLogin","obj","__esModule","createElement","minHeight","values","marginRight","source"],"sourceRoot":""}