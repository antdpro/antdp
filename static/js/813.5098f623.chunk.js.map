{"version":3,"file":"static/js/813.5098f623.chunk.js","mappings":"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","sources":["../../../packages/antdp-ui/src/CardPro/index.tsx","../../../packages/antdp-ui/src/utils/index.tsx","../../../packages/antdp-ui/src/UploadGrid/index.tsx","../../../packages/antdp-ui/src/InputCount/index.tsx","../../../packages/antdp-ui/src/QuickForm/formLayout.tsx","../../../packages/antdp-ui/src/QuickForm/Hide/context.ts","../../../packages/antdp-ui/src/QuickForm/Hide/store.ts","../../../packages/antdp-ui/src/QuickForm/Hide/index.tsx","../../../packages/antdp-ui/src/QuickForm/utils.ts","../../../packages/antdp-ui/src/QuickForm/index.tsx","../../../packages/antdp-ui/src/FormDetail/index.tsx","../../../packages/antdp-ui/src/ButtonGroupPro/index.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Card } from 'antd';\nimport { CardProps } from 'antd/es/card';\nimport './index.css';\n\nexport interface CarProProps extends CardProps {\n  children?: React.ReactNode;\n  className?: string;\n}\nexport default class CardPro extends Component<CarProProps> {\n  render() {\n    const { children, className, ...otherProps } = this.props;\n    return (\n      <Card className={classNames(className, 'antdp-KCardPro')} {...otherProps}>\n        {children}\n      </Card>\n    );\n  }\n}\n","import { UploadFile } from 'antd/es/upload/interface';\n\nconst getBase64 = (file: File | Blob | undefined): Promise<string> => {\n  if (!file) return Promise.reject(new Error('no file'));\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file!);\n    reader.onload = () => resolve(reader.result as string);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\nconst imagePreview = async (\n  file: UploadFile,\n  callback: (params: { image: string }) => void,\n) => {\n  const newFile = file;\n  if (!newFile.url && !newFile.preview) {\n    newFile.preview = await getBase64(file.originFileObj);\n  }\n  const newPreviewImage: string = newFile.url || newFile.preview || '';\n  callback({\n    image: newPreviewImage,\n  });\n};\n\nexport { imagePreview };\n","import React, { useCallback, useRef, useState } from 'react';\nimport { Tooltip, Upload, Modal } from 'antd';\nimport type { UploadFile, } from 'antd/es/upload/interface';\nimport update from 'immutability-helper';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport \"./pictureGrid.css\"\nimport { Props } from \"./types\"\nimport { imagePreview } from \"./../utils\"\n\nconst type = 'DragableUploadList';\n\ninterface DragableUploadListItemProps {\n  originNode: React.ReactElement<any, string | React.JSXElementConstructor<any>>;\n  file: UploadFile;\n  fileList: UploadFile[];\n  moveRow: (dragIndex: any, hoverIndex: any) => void;\n}\n\nconst DragableUploadListItem = ({\n  originNode,\n  moveRow,\n  file,\n  fileList,\n}: DragableUploadListItemProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const index = fileList.indexOf(file);\n  const [{ isOver, dropClassName }, drop] = useDrop({\n    accept: type,\n    collect: (monitor) => {\n      const { index: dragIndex } = monitor.getItem() || {};\n      if (dragIndex === index) {\n        return {};\n      }\n      return {\n        isOver: monitor.isOver(),\n        dropClassName: dragIndex < index ? ' drop-over-downward' : ' drop-over-upward',\n      };\n    },\n    drop: (item: any) => {\n      moveRow(item.index, index);\n    },\n  });\n  const [, drag] = useDrag({\n    type,\n    item: { index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  drop(drag(ref));\n  const errorNode = <Tooltip title=\"上传失败\">{originNode.props.children}</Tooltip>;\n  return (\n    <div\n      ref={ref}\n      className={`ant-upload-draggable-list-item ${isOver ? dropClassName : ''}`}\n      style={{ cursor: 'move' }}\n    >\n      {file.status === 'error' ? errorNode : originNode}\n    </div>\n  );\n};\n\nconst UploadGrid: React.FC<Props> = (props) => {\n  const { fileList = [] } = props\n  const [previewImage, setPreviewImage] = useState('');\n\n  const moveRow = useCallback(\n    (dragIndex: number, hoverIndex: number) => {\n      const dragRow = fileList[dragIndex];\n      const newFileList = update(fileList, {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, dragRow],\n        ],\n      })\n      if (props.onChange) {\n        props.onChange({ fileList: newFileList })\n      }\n    },\n    [fileList],\n  );\n\n\n  const onPreview = async (file: UploadFile) => {\n    await imagePreview(file, ({ image }) => {\n      setPreviewImage(image);\n    });\n  };\n  return (\n    <div className='upload-grid' >\n      <DndProvider backend={HTML5Backend}>\n        <Upload\n          {...props}\n          onPreview={onPreview}\n          fileList={fileList}\n          itemRender={(originNode, file, currFileList) => (\n            <DragableUploadListItem\n              originNode={originNode}\n              file={file}\n              fileList={currFileList}\n              moveRow={moveRow}\n            />\n          )}\n        />\n      </DndProvider>\n      <Modal\n        open={!!previewImage}\n        footer={null}\n        onCancel={() => setPreviewImage('')}\n        bodyStyle={{ padding: 0 }}\n        destroyOnClose\n      >\n        <img style={{ width: '100%' }} alt=\"\" src={previewImage} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default UploadGrid;","import React, { Fragment, useState, useEffect } from 'react';\nimport { Input, Button } from 'antd';\nimport { ButtonProps } from 'antd/lib/button';\nimport { InputProps } from 'antd/lib/input';\n\nexport interface InputCountProps extends InputProps {\n  onSend?: () => void;\n  buttonProps?: ButtonProps;\n  countTime?: number;\n}\n\nconst InputCount = (props: InputCountProps) => {\n  const { onSend, buttonProps, countTime, ...others } = props;\n  // 默认倒计时时间\n  const DEFAULT_TIME = countTime ? countTime : 60;\n  const [time, setTime] = useState(DEFAULT_TIME);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    let timer: any = 0;\n    if (loading && time != 0) {\n      timer = setInterval(() => {\n        // 这时候的time由于闭包的原因，一直是0，所以这里不能用setNum(num-1)\n        setTime((n) => {\n          if (n == 1) {\n            setLoading(false);\n            clearInterval(timer);\n          }\n          return n - 1;\n        });\n      }, 1000);\n    }\n    return () => {\n      // 组件销毁时，清除定时器\n      clearInterval(timer);\n    };\n  }, [loading]);\n\n  //短信验证\n  const send = (e: { preventDefault: () => void }) => {\n    setTime(DEFAULT_TIME);\n    setLoading(true);\n    // 点击发送按钮,回调调用接口\n    onSend && onSend();\n    e.preventDefault();\n  };\n  return (\n    <Fragment>\n      <div style={{\n        display: 'flex',\n        alignItems: 'center'\n      }}>\n        <Input\n          style={{\n            flex: 1,\n            transition: 'width .3s',\n            marginRight: 8,\n          }}\n          {...others}\n        />\n        <Button\n          style={{\n            display: 'block'\n          }}\n          size=\"middle\"\n          type=\"primary\"\n          loading={loading}\n          onClick={send.bind(this)}\n          {...buttonProps}\n        >\n          {loading ? time + '秒' : '发送验证'}\n        </Button>\n      </div>\n    </Fragment>\n  );\n};\nexport default InputCount;\n","// 独占一行的， 如备着类的表单\n// eslint-disable-next-line camelcase\nexport const colLayout_one = {\n  xs: 24,\n  sm: 24,\n  md: 24,\n  lg: 24,\n  xl: 24,\n};\n\n// 一行排两个表单的\n// eslint-disable-next-line camelcase\nexport const colLayout_two = {\n  xs: 24,\n  sm: 24,\n  md: 24,\n  lg: 12,\n  xl: 12,\n};\n// eslint-disable-next-line camelcase\nexport const fromItemLayout_conspan_two = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 6 },\n    xl: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 18 },\n    xl: { span: 20 },\n  },\n};\n\n// colspan === 1 的时候\n\n// eslint-disable-next-line camelcase\nexport const fromItemLayout_conspan_one = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 4 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 20 },\n  },\n};\n\n// 一行排三个表单；\n// eslint-disable-next-line camelcase\nexport const colLayout_third = {\n  xs: 24,\n  sm: 24,\n  md: 24,\n  lg: 12,\n  xl: 8,\n};\n// eslint-disable-next-line camelcase\nexport const fromItemLayout_conspan_third = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 4 },\n    xl: { span: 6 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 20 },\n    xl: { span: 18 },\n  },\n};\n\n//  一行排4个表单；\n// eslint-disable-next-line camelcase\nexport const colLayout_fourth = {\n  xs: 24,\n  sm: 24,\n  md: 24,\n  lg: 8,\n  xl: 6,\n};\n// eslint-disable-next-line camelcase\nexport const fromItemLayout_conspan_fourth = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 4 },\n    xl: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 20 },\n    xl: { span: 16 },\n  },\n};\n\n// item.full && colspan===3 || colspan===4\n// eslint-disable-next-line camelcase\nexport const fromItemLayout_third_row = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 4 },\n    xl: { span: 2 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 20 },\n    xl: { span: 22 },\n  },\n};\n\n// colspan && item.full\n// eslint-disable-next-line camelcase\nexport const fromItemLayout_two_row = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 3 },\n    xl: { span: 2 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 24 },\n    md: { span: 24 },\n    lg: { span: 21 },\n    xl: { span: 22 },\n  },\n};\n\nexport const formDefaultFormItemLayout = {\n  xs: 12,\n  sm: 12,\n  md: 12,\n  lg: 12,\n  xl: 8,\n};\n","import React from 'react';\nimport { GetStoreProps } from './interface';\nimport warning from 'rc-util/lib/warning';\n\nconst warningFunc: any = () => {\n  warning(\n    false,\n    'Can not find FormContext. Please make sure you wrap Field under Form.',\n  );\n};\n\nexport const HideContext = React.createContext<GetStoreProps>({\n  getComponents: warningFunc,\n  getStoreState: warningFunc,\n  setInitialValues: warningFunc,\n  updateValue: warningFunc,\n  getItemStore: () => ({\n    init: warningFunc,\n    register: warningFunc,\n    getStoreState: warningFunc,\n    updateValue: warningFunc,\n    getValue: warningFunc,\n  }),\n});\n\nexport const useHideContext = () => React.useContext(HideContext);\n","import React from 'react';\nimport {\n  setValue,\n  setValues,\n  getValue,\n} from 'rc-field-form/lib/utils/valueUtil';\nimport {\n  FieldEntity,\n  NamePath,\n  InternalNamePath,\n  GetStoreProps,\n} from './interface';\n\nclass Store {\n  // 保存状态\n  store = {};\n\n  //保存组件\n  componentLists: FieldEntity[] = [];\n  // 初始化\n  private init = (entery: FieldEntity) => {\n    const { initialValue } = entery.props || {};\n    // 初始值\n    if (initialValue !== undefined) {\n      // 获取保存路径\n      const pathName = entery.getNamePath();\n      if (pathName) {\n        this.store = setValue(this.store, pathName, initialValue);\n      }\n    }\n  };\n\n  // 挂载之后 组件保存\n  private register = (entery: FieldEntity) => {\n    this.componentLists.push(entery);\n    const { initialValue } = entery.props || {};\n    if (initialValue !== undefined) {\n      entery.refresh();\n    }\n    return () => {\n      // 组件卸载进行组件删除\n      this.componentLists = this.componentLists.filter(\n        (item) => item !== entery,\n      );\n      // 保存的值进行删除\n      const pathName = entery.getNamePath();\n      if (pathName) {\n        this.store = setValue(this.store, pathName, undefined);\n      }\n    };\n  };\n\n  // 获取值\n  private getStoreState = (pathName?: InternalNamePath) => {\n    if (pathName) {\n      // 如果有路径，则根据路径获取值\n      return getValue(this.store, pathName);\n    }\n    return this.store;\n  };\n\n  private getComponents = () => {\n    return this.componentLists;\n  };\n\n  getStore = () => {\n    return {\n      getComponents: this.getComponents,\n      getStoreState: this.getStoreState,\n      getItemStore: this.getItemStore,\n      setInitialValues: this.setInitialValues,\n      updateValue: this.updateValue,\n    };\n  };\n  // 子项内的方法\n  private getItemStore = () => {\n    return {\n      init: this.init,\n      register: this.register,\n      getStoreState: this.getStoreState,\n      updateValue: this.updateValue,\n      getValue: this.getValue,\n    };\n  };\n\n  private setInitialValues = (initialValues: {}, init: boolean) => {\n    if (init) {\n      this.store = setValues({}, initialValues, this.store);\n    }\n  };\n\n  // 更新值\n  private updateValue = (pathName: NamePath, value: boolean) => {\n    const path: InternalNamePath = Array.isArray(pathName)\n      ? pathName\n      : [pathName];\n    this.store = setValue(this.store, path, value);\n    // 通知对应的组件进行强制更新\n    this.notifyObservers(path);\n  };\n  // 获取值\n  private getValue = (pathName: NamePath) => {\n    const path: InternalNamePath = Array.isArray(pathName)\n      ? pathName\n      : [pathName];\n    return getValue(this.store, path);\n  };\n  // 通知更新组件\n  private notifyObservers = (pathName: InternalNamePath) => {\n    this.componentLists.forEach(({ refresh, getNamePath }) => {\n      const currentPath = getNamePath();\n      // 判断路径相同的进行值更新\n      if (currentPath.join('') === pathName.join('')) {\n        refresh();\n      }\n    });\n  };\n}\n\n/** 状态管理 */\nconst useStore = (form?: GetStoreProps) => {\n  const formRef = React.useRef<GetStoreProps>();\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      const formStore: Store = new Store();\n      formRef.current = formStore.getStore();\n    }\n  }\n  return [formRef.current];\n};\n\nexport default useStore;\n","import React from 'react';\nimport { HideContext } from './context';\nimport { GetStoreProps, NamePath } from './interface';\n\nexport interface HideState {}\n\nexport interface HideProps {\n  hideContent: GetStoreProps;\n  name: NamePath;\n  initialValue?: boolean;\n}\n\nclass Hide extends React.Component<HideProps, HideState> {\n  private mounted = false;\n  private cancelRegisterFunc = () => {};\n\n  constructor(props: HideProps) {\n    super(props);\n    if (props.hideContent) {\n      const { hideContent } = props;\n      const { init } = hideContent.getItemStore();\n      init(this);\n    }\n  }\n\n  componentDidMount() {\n    const { hideContent } = this.props;\n    // Register on init\n    if (hideContent) {\n      const { register } = hideContent.getItemStore();\n      this.cancelRegisterFunc = register(this);\n    }\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.cancelRegisterFunc();\n    this.mounted = false;\n  }\n\n  getNamePath = () => {\n    const { name } = this.props;\n    if (!Array.isArray(name)) {\n      return [name];\n    }\n    return name;\n  };\n  // 更新组件\n  refresh = () => {\n    if (this.mounted) {\n      this.forceUpdate();\n    }\n  };\n\n  getValue = () => {\n    const { hideContent } = this.props;\n    const { getValue } = hideContent.getItemStore();\n    return getValue(this.getNamePath());\n  };\n\n  render() {\n    const { children } = this.props;\n    // 默认 false 展示\n    // 只是判断是否进行显示和隐藏\n    return !this.getValue() ? children : <React.Fragment />;\n  }\n}\n\nexport default (\n  props: Omit<HideProps, 'hideContent'> & { [x: string]: any },\n) => {\n  const hideContent = React.useContext(HideContext);\n  return <Hide {...props} hideContent={hideContent} />;\n};\n","import { HOOK_MARK } from 'rc-field-form/lib/FieldContext';\nimport {\n  InternalFormInstance,\n  InternalNamePath,\n  FormInstance,\n} from 'rc-field-form/lib/interface';\n// 根据 Form.useForm() 返回值 [from] 进行获取子项中更新值的方法\nexport const getChildItemFun = (form: FormInstance) => {\n  let childFun: any = {};\n  if (form) {\n    const { getInternalHooks } = form as InternalFormInstance;\n    childFun = getInternalHooks(HOOK_MARK);\n  }\n  const updateValue = (namePath: InternalNamePath, value: any) => {\n    if (childFun.dispatch) {\n      childFun.dispatch({\n        type: 'updateValue',\n        namePath,\n        value,\n      });\n    }\n  };\n  return {\n    ...childFun,\n    updateValue,\n  };\n};","/* eslint-disable camelcase */\nimport React, { forwardRef } from 'react';\nimport {\n  Form,\n  Input,\n  Select,\n  Collapse,\n  Row,\n  Col,\n  Cascader,\n  InputNumber,\n  Radio,\n  Divider,\n  AutoComplete,\n  Button,\n  Checkbox,\n  TreeSelect,\n  ConfigProvider,\n  DatePicker,\n  TimePicker,\n} from 'antd';\nimport { FormProps, FormInstance } from 'antd/es/form';\nimport CardPro from '../CardPro';\nimport UploadGrid from '../UploadGrid';\nimport InputCount from '../InputCount';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport 'moment/locale/zh-cn';\nimport locale from 'antd/es/date-picker/locale/zh_CN';\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  UploadOutlined,\n  AudioOutlined,\n} from '@ant-design/icons';\nimport {\n  colLayout_one,\n  colLayout_two,\n  colLayout_third,\n  colLayout_fourth,\n  fromItemLayout_two_row,\n  fromItemLayout_conspan_two,\n  fromItemLayout_conspan_third,\n  fromItemLayout_conspan_fourth,\n  fromItemLayout_third_row,\n  fromItemLayout_conspan_one,\n  formDefaultFormItemLayout,\n} from './formLayout';\nimport './index.css';\n\nimport { HideContext, useHideContext } from \"./Hide/context\"\nimport { GetStoreProps } from \"./Hide/interface\"\nimport useFormItemHide from \"./Hide/store\"\nimport Hide from \"./Hide\"\n\nexport { getChildItemFun as getChildFormItemFun } from \"./utils\"\n\nconst Panel = Collapse.Panel;\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { Search } = Input;\nconst { RangePicker, MonthPicker } = DatePicker;\n\ndeclare type FormLayout = 'horizontal' | 'inline' | 'vertical';\n\ninterface ItemsProps<T> {\n  defaultcolspan?: any;\n  /** 表单元素标题 */\n  label: string;\n  /** 表单名称 antd from 组件 getFieldDecorator 第一个参数 */\n  name: string;\n  /** 表单初始值 */\n  initialValue?: string | any;\n  /** 表单是否独占一行  */\n  full?: boolean;\n  /** 表单隐藏  */\n  hideInForm?: boolean;\n  /** input select 等表单组件属性集合 具体参考 antd  */\n  attributes?: T | any;\n  type?: string | undefined;\n  options?: Array<{ label: string; value: string | number }> | [] | undefined;\n  span?: number;\n  render?: JSX.Element;\n}\n\nexport interface QuickFormProps<Values> extends FormProps<Values> {\n  /** 表单集合 */\n  formDatas: Array<ItemsProps<object>>;\n  /** antd collapse 组件属性集合 */\n  collapseAttributes?: Object;\n  /** antd collapse.panel 组件属性集合 */\n  panelAttributes?: Object;\n  /** 折叠表单下是否初始化选中面板 */\n  visible?: boolean;\n  /** 表单单行排列 */\n  colspan?: number;\n  /** 组件头部标题 */\n  header?: React.ReactNode | any;\n  /** 自定义表单栅格宽度占比,参照 antd 栅格布局 */\n  defaultFormItemLayout?: Object;\n  /** 自定义表单排列方式 */\n  defaultFormLayout?: FormLayout;\n  /** 尺寸,参照 antd */\n  size?: any;\n  /** 表单类型:modal&cardform&CardPro */\n  type?: string;\n  /** antd collapse.panel 自定义渲染每个面板右上角的内容 */\n  extra?: any;\n\n  /** Form.useFormItemHide 返回值  */\n  formHide?: GetStoreProps;\n  /** 初始值 隐藏显示 字段对应的值 */\n  initialHide?: { [x: string]: boolean };\n}\n\nexport type QuickFormComponent<Values = any> = (\n  props: QuickFormProps<Values>,\n  ref?:\n    | ((instance: FormInstance<Values> | null) => void)\n    | React.RefObject<FormInstance<Values>>\n    | null\n    | undefined,\n) => React.ReactElement;\n\nconst QuickForm: QuickFormComponent = (props, ref) => {\n  const {\n    collapseAttributes,\n    panelAttributes,\n    visible = false,\n    type = 'cardform',\n    extra,\n    formDatas,\n    colspan = 3,\n    header,\n    defaultFormLayout = 'vertical',\n    defaultFormItemLayout = formDefaultFormItemLayout,\n    size = 'default',\n    formHide,\n    initialHide,\n    ...otherProps\n  } = props;\n\n  const [hide] = useFormItemHide(formHide)\n  React.useMemo(() => hide.setInitialValues(initialHide || {}, true), []);\n\n  const HideFormItemDoM = []; // 隐藏的表单\n  const FormItemDoM = [];\n  let rowcolspan: string | any; // col 里的布局\n  let formitemlayout: string | any; // formitem 的布局\n\n  for (var i = 0; i < formDatas.length; i++) {\n    if (formDatas[i].hideInForm) {\n      HideFormItemDoM.push(formDatas[i]);\n    } else {\n      FormItemDoM.push(formDatas[i]);\n    }\n  }\n  // 计算一个row里排几个表单；\n  const result = [];\n  for (let i = 0, j = FormItemDoM.length; i < j; i++) {\n    if (FormItemDoM[i].full) {\n      result.push(FormItemDoM.slice(i, i + 1));\n    } else {\n      if (FormItemDoM[i + 1] && FormItemDoM[i + 1].full) {\n        result.push(FormItemDoM.slice(i, i + 1));\n      } else if (FormItemDoM[i].defaultcolspan) {\n        result.push(FormItemDoM.slice(i, i + FormItemDoM[i].defaultcolspan));\n        i = i + FormItemDoM[i].defaultcolspan - 1;\n      } else {\n        result.push(FormItemDoM.slice(i, i + colspan));\n        i = i + colspan - 1;\n      }\n    }\n  }\n  // 渲染成表单;\n  const CollapseFormDoM = (item: any, idx: React.Key | null | undefined) => {\n    const {\n      label,\n      name,\n      attributes,\n      type,\n      options,\n      onlyimg,\n      defaultFormItemLayout,\n      full,\n      defaultRowColspan,\n      hideInForm,\n      descItem,\n      render,\n      // 用于判断是否需要进行隐藏显示 (在组件外层包裹一层组件用于控制item显示和隐藏)\n      isHide,\n      ...otherts\n    } = item;\n    const dataList = options || [];\n    const optionDatas =\n      dataList &&\n      dataList.length > 0 &&\n      dataList.map(\n        (\n          { value, label, ...others }: any,\n          _idx: React.Key | null | undefined,\n        ) => {\n          if (type === 'select' || type === 'Select') {\n            return (\n              <Option value={value} key={_idx} {...others}>\n                {label}\n              </Option>\n            );\n          } else if (type === 'radio' || type === 'Radio') {\n            return (\n              <Radio.Button value={value} key={_idx} {...others}>\n                {label}\n              </Radio.Button>\n            );\n          }\n        },\n      );\n    const selectOption = optionDatas ? optionDatas : [];\n    const rowcolspan_num = [\n      colLayout_one,\n      colLayout_two,\n      colLayout_third,\n      colLayout_fourth,\n    ];\n    const formitemlayout_num = [\n      fromItemLayout_conspan_one,\n      fromItemLayout_conspan_two,\n      fromItemLayout_conspan_third,\n      fromItemLayout_conspan_fourth,\n    ];\n    if (colspan && full) {\n      rowcolspan = colLayout_one;\n      if (colspan === 3 || colspan === 4) {\n        if (props.defaultFormItemLayout) {\n          // 如果FormCollapse组件上带有defaulFormItemLayout参数\n          formitemlayout = props.defaultFormItemLayout;\n          // eslint-disable-next-line max-depth\n          if (item.defaultFormItemLayout || item.defaultRowColspan) {\n            // 如果FormCollapse组件内部的某个小组件带有defaulFormItemLayout参数\n            formitemlayout = item.defaultFormItemLayout;\n            rowcolspan = item.defaultRowColspan; // 单独的表单col 布局\n          }\n        } else if (item.defaultFormItemLayout || item.defaultRowColspan) {\n          //FormCollapse组件内部只有某个小组件带了defaulFormItemLayout参数\n          formitemlayout = item.defaultFormItemLayout;\n          rowcolspan = item.defaultRowColspan; // 单独的表单col 布局\n        } else {\n          formitemlayout = fromItemLayout_third_row;\n        }\n      } else {\n        formitemlayout = fromItemLayout_two_row;\n      }\n    } else {\n      rowcolspan = rowcolspan_num[colspan - 1];\n      if (props.defaultFormItemLayout) {\n        formitemlayout = props.defaultFormItemLayout;\n        if (item.defaultFormItemLayout || item.defaultRowColspan) {\n          // 如果FormCollapse组件内部的某个小组件带有defaultFormItemLayout参数\n          formitemlayout = item.defaultFormItemLayout;\n          rowcolspan = item.defaultRowColspan; // 单独的表单col 布局\n        }\n      } else if (item.defaultFormItemLayout || item.defaultRowColspan) {\n        formitemlayout =\n          item.defaultFormItemLayout || formitemlayout_num[colspan - 1];\n        rowcolspan = item.defaultRowColspan; // 单独的表单col 布局\n      } else {\n        formitemlayout = formitemlayout_num[colspan - 1];\n      }\n    }\n\n    // 上传图片的按钮展示\n    const uploadButtonDom = () => {\n      if (item.attributes.listType === 'picture-card') {\n        if (item.attributes.imageUrl && item.attributes.imageUrl !== '') {\n          return (\n            <img\n              src={item.attributes.imageUrl}\n              alt=\"avatar\"\n              style={{ width: '100%' }}\n            />\n          );\n        } else if (item.attributes.fileList) {\n          // 上传的图片大于或等于8张时 并且 没有onlyimg参数，显示icon上传按钮\n          if (item.attributes.fileList.length >= 8 && !onlyimg) {\n            return (\n              <div>\n                {item.attributes.loading === 'loading' ? (\n                  <LoadingOutlined />\n                ) : (\n                  <PlusOutlined />\n                )}\n                <div className=\"ant-upload-text\">上传</div>\n              </div>\n            );\n            // 上传的图片大于或等于maxCount张时 并且 有onlyimg参数，不显示上传按钮\n          } else if (item.attributes.maxCount && item.attributes.fileList.length >= item.attributes.maxCount && onlyimg) {\n            return null;\n          }\n          return (\n            <div>\n              {item.attributes.loading === 'loading' ? (\n                <LoadingOutlined />\n              ) : (\n                <PlusOutlined />\n              )}\n              <div className=\"ant-upload-text\">上传</div>\n            </div>\n          );\n        }\n      } else {\n        return (\n          <div>\n            <Button>\n              <UploadOutlined />\n              上传\n            </Button>\n          </div>\n        );\n      }\n    };\n    let renderItem = (\n      <Col\n        key={idx}\n        style={{\n          display: item.hideInForm ? 'none' : 'block',\n          padding:\n            defaultFormLayout && defaultFormLayout === 'vertical'\n              ? '0px 12px 8px 12px'\n              : '0',\n        }}\n        className={\n          defaultFormLayout && defaultFormLayout === 'vertical'\n            ? 'antdp-FormCol'\n            : ''\n        }\n        {...rowcolspan}\n      >\n        <FormItem\n          className=\"antdp-FormItem\"\n          colon={false}\n          label={label}\n          name={name}\n          {...(defaultFormLayout && defaultFormLayout === 'vertical'\n            ? null\n            : formitemlayout)}\n          {...otherts}\n        >\n          {name ? (\n            (() => {\n              // 组件基础参数\n              const componentprams = {\n                size: size ? size : 'small',\n                ...attributes,\n              };\n              if (type === 'select' || type === 'Select') {\n                return (\n                  <Select\n                    dropdownMatchSelectWidth={false}\n                    allowClear\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请选择${label} `\n                    }\n                    {...componentprams}\n                  >\n                    {selectOption}\n                  </Select>\n                );\n              } else if (type === 'radio' || type === 'Radio') {\n                return (\n                  <Radio.Group size={size ? size : 'small'} {...attributes}>\n                    {selectOption}\n                  </Radio.Group>\n                );\n              } else if (type === 'datePicker' || type === 'DatePicker') {\n                return (\n                  <DatePicker\n                    locale={locale}\n                    style={{ width: '100%' }}\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请选择${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'monthPicker' || type === 'MonthPicker') {\n                return (\n                  <MonthPicker\n                    locale={locale}\n                    style={{ width: '100%' }}\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请选择${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'rangePicker' || type === 'RangePicker') {\n                return (\n                  <RangePicker\n                    locale={locale}\n                    style={{ width: '100%' }}\n                    {...componentprams}\n                  />\n                );\n              } else if (\n                type === 'timepicker' ||\n                type === 'timePicker' ||\n                type === 'TimePicker'\n              ) {\n                return (\n                  <TimePicker\n                    locale={locale}\n                    style={{ width: '100%' }}\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请选择${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'cascader' || type === 'Cascader') {\n                return (\n                  <Cascader\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请选择${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'textarea' || type === 'TextArea') {\n                return (\n                  <Input.TextArea\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请输入${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'inputNumber' || type === 'InputNumber') {\n                return (\n                  <InputNumber\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请输入${label} `\n                    }\n                    style={{ width: '100%' }}\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'treeSelect' || type === 'TreeSelect') {\n                return (\n                  <TreeSelect\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请选择${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'checkbox' || type === 'Checkbox') {\n                if (\n                  (item.options && item.options.length > 0) ||\n                  (item.option && item.option.length > 0)\n                ) {\n                  return (\n                    <Checkbox.Group\n                      options={item.options || item.option}\n                      {...attributes}\n                    />\n                  );\n                }\n                return (\n                  <Checkbox {...attributes}>\n                    {label || item.checkboxLable}\n                  </Checkbox>\n                );\n              } else if (type === 'UploadGrid' || type === 'uploadGrid') {\n                return (\n                  <UploadGrid {...attributes}>{uploadButtonDom()}</UploadGrid>\n                );\n              } else if (type === 'autoComplete' || type === 'AutoComplete') {\n                return (\n                  <AutoComplete\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请输入${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'Password') {\n                return (\n                  <Input.Password\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请输入${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              } else if (type === 'inputCount' || type === 'InputCount') {\n                return (\n                  <InputCount\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请输入${label} `\n                    }\n                    {...attributes}\n                  />\n                );\n              } else if (type === 'render') {\n                return render && render\n              } else {\n                if (\n                  (attributes && attributes.type === 'Search') ||\n                  type === 'InputSearch'\n                ) {\n                  const suffix = (\n                    <AudioOutlined\n                      style={{\n                        fontSize: 16,\n                        color: '#fff',\n                      }}\n                    />\n                  );\n                  return (\n                    <Search\n                      suffix={suffix}\n                      placeholder={\n                        attributes && attributes.disabled\n                          ? ''\n                          : `请输入${label} `\n                      }\n                      {...componentprams}\n                    />\n                  );\n                }\n                return (\n                  <Input\n                    placeholder={\n                      attributes && attributes.disabled ? '' : `请输入${label} `\n                    }\n                    {...componentprams}\n                  />\n                );\n              }\n            })()\n          ) : (\n            <Input\n              placeholder={\n                attributes && attributes.disabled ? '' : `请输入${label} `\n              }\n              size={size}\n              {...attributes}\n            />\n          )}\n        </FormItem>\n      </Col>\n    )\n\n    if (isHide && name) {\n      return (\n        <Hide key={idx} name={name}>\n          {renderItem}\n        </Hide>\n      );\n    }\n\n\n    return renderItem;\n  };\n  // 隐藏的表单集合\n  const hideCollapseForm = HideFormItemDoM.map((item, idx) =>\n    CollapseFormDoM(item, idx),\n  );\n  // 表单集合\n  const CollapseForm = result.map((it, indix) => {\n    return (\n      <Row key={indix}>\n        {it.map((item, idx) => {\n          return CollapseFormDoM(item, idx);\n        })}\n      </Row>\n    );\n  });\n  // Form+表单集合\n  const FormDom = (\n    <HideContext.Provider value={hide} >\n      <ConfigProvider locale={zhCN}>\n        <Form\n          layout={defaultFormLayout ? defaultFormLayout : 'horizontal'}\n          ref={ref}\n          {...(defaultFormLayout && defaultFormLayout === 'vertical'\n            ? null\n            : formitemlayout)}\n          {...otherProps}\n        >\n          <Row>{hideCollapseForm}</Row>\n          <div>{CollapseForm}</div>\n        </Form>\n      </ConfigProvider>\n    </HideContext.Provider>\n  );\n  // type 为 modal时没有折叠，没有标题，直接显示form表单内容\n  if (type === 'modal') {\n    return <div style={{ margin: -10 }}>{FormDom}</div>\n  }\n  // type 为CardPro  带标题\n  if (type === 'CardPro') {\n    return (\n      <CardPro title={header}>\n        <div className=\"antdp-FormBox\">{FormDom}</div>\n      </CardPro>\n    );\n  }\n  // type 为cardform 时 显示表单，分割线 分离每个表单\n  if (type === 'cardform') {\n    return (\n      <div>\n        <h3 className=\"antdp-FormTitle\">{header}</h3>\n        {FormDom}\n        <Divider type=\"horizontal\" className=\"antdp-FormDivider\" />\n      </div>\n    );\n  }\n  return (\n    <Collapse\n      defaultActiveKey={!visible ? ['1'] : ''}\n      {...collapseAttributes}\n      className=\"antdp-mb10\"\n    >\n      <Panel header={header} key=\"1\" {...panelAttributes} extra={extra}>\n        {FormDom}\n      </Panel>\n    </Collapse>\n  );\n};\n\nconst FormForward = forwardRef(QuickForm)\n\ntype initFormProps = typeof FormForward\n\ninterface QFormProps extends initFormProps {\n  useHideContext: typeof useHideContext;\n  useFormItemHide: typeof useFormItemHide\n}\n\nconst QForm = FormForward as QFormProps\n\nQForm.useHideContext = useHideContext\n\nQForm.useFormItemHide = useFormItemHide\n\nexport default QForm\n","import React, { forwardRef } from 'react';\nimport { Descriptions, Tooltip } from 'antd';\nimport { DescriptionsProps } from 'antd/es/descriptions';\nimport { QuickFormProps } from '../QuickForm';\nimport QucikFrom from '../QuickForm';\nimport UploadGrid from '../UploadGrid';\nimport moment from 'moment';\n\ntype treeDataProps = {\n  label?: string | number | undefined;\n  title?: string | number | undefined;\n  value: number | string;\n  children?: Array<treeDataProps>;\n};\n// 处理TreeSelect数据\nconst getTreeDataParent = (\n  list: Array<treeDataProps> = [],\n  current: Array<string | number> = [],\n  objList: Array<string | number> = [],\n) => {\n  (list || []).forEach((item) => {\n    if ((current || []).indexOf(item.value) >= 0) {\n      objList.push(item.label || item.title || '');\n    }\n    if (item.children) {\n      getTreeDataParent(item.children, current, objList);\n    }\n  });\n  return objList;\n};\n\ninterface FormDetailProps extends QuickFormProps<any> {\n  isView: boolean;\n  bordered: boolean | undefined;\n  layout?: 'horizontal' | 'vertical';\n  style?: object;\n  otherDescriptions?: DescriptionsProps;\n}\n\ntype FormDetailComponent = (\n  props: FormDetailProps,\n  ref?: any,\n) => React.ReactElement;\n\nconst FormDetail: FormDetailComponent = (props, ref) => {\n  const {\n    formDatas = [],\n    isView = false,\n    header = '',\n    type,\n    colspan,\n    style,\n    layout = 'horizontal',\n    bordered = true,\n    otherDescriptions = {},\n    ...others\n  } = props;\n  return (\n    <div style={style}>\n      {' '}\n      {isView ? (\n        <Descriptions\n          {...otherDescriptions}\n          title={header}\n          bordered={bordered}\n          size=\"small\"\n          style={{ marginBottom: 24 }}\n          column={colspan}\n          layout={layout}\n        >\n          {formDatas.map((item, idx) => {\n            let newOptions = item?.options || [];\n            let content: string | any;\n            if (item.type === 'UploadGrid' || type === 'uploadGrid') {\n              content = (\n                <UploadGrid useDragHandle={true} {...item.attributes} />\n              );\n            } else if (item.type === 'radio' || item.type === 'Radio') {\n              let value = newOptions.filter(\n                (itm: { value: any }) => itm.value === item.initialValue,\n              );\n              content = (value && value.length > 0 && value[0].label) || '';\n            } else if (\n              typeof item.initialValue === 'object' &&\n              moment.isMoment(item.initialValue)\n            ) {\n              content = item.initialValue.format('YYYY-MM-DD');\n            } else if (\n              item.type === 'rangePicker' ||\n              item.type === 'RangePicker'\n            ) {\n              if (item.initialValue) {\n                item.initialValue.forEach(\n                  (date: { format: (arg0: string) => string }) => {\n                    if (date) {\n                      content += date.format('YYYY-MM-DD HH:mm:ss');\n                    }\n                  },\n                );\n              }\n            } else if (item.type === 'checkbox' || item.type === 'Checkbox') {\n              const values = item.initialValue || [];\n              const arr: Array<string | number | undefined> = [];\n              newOptions.forEach((itm) => {\n                if (values.includes(itm.value)) {\n                  arr.push(itm.label);\n                }\n              });\n              content = arr.join(',');\n            } else if (item.type === 'cascader' || item.type === 'Cascader') {\n              const values = item.initialValue;\n              content = values ? values.join('') : '';\n            } else if (item.type === 'select' || item.type === 'Select') {\n              if (item.attributes && item.attributes.labelInValue) {\n                content = item.initialValue && item.initialValue.label;\n              } else {\n                if (newOptions.length > 0) {\n                  let selObj = newOptions.find(\n                    (itm: { value: any }) => itm.value === item.initialValue,\n                  );\n                  content = selObj ? selObj.label : item.initialValue;\n                } else {\n                  content = item.initialValue;\n                }\n                if (item.attributes && item.attributes.mode === 'multiple') {\n                  content =\n                    (item.initialValue && item.initialValue.join(' ')) || '';\n                }\n              }\n            } else if (item.type === 'treeSelect' || type === 'TreeSelect') {\n              const { attributes, initialValue } = item;\n              const { treeData, multiple, labelInValue } = attributes || {};\n              // 对象 多选\n              if (labelInValue && multiple) {\n                content = (initialValue || [])\n                  .map((item: { label: any }) => item.label)\n                  .toString();\n                // 多选\n              } else if (multiple) {\n                const selObj = getTreeDataParent(\n                  treeData,\n                  [initialValue] || [],\n                );\n                content = (selObj || []).toString();\n                // 单选对象\n              } else if (labelInValue) {\n                content = (initialValue || {}).label || '';\n                // 单选\n              } else {\n                const treeData = item?.attributes?.treeData || [];\n                const initialValue = item.initialValue;\n                if (treeData.length > 0) {\n                  const selObj = getTreeDataParent(\n                    treeData,\n                    [initialValue] || [],\n                  );\n                  content = (selObj || []).toString();\n                }\n              }\n            } else {\n              content =\n                typeof item.initialValue === 'object'\n                  ? item.initialValue && item.initialValue.label\n                  : item.initialValue;\n            }\n            return (\n              !item.hideInForm && (\n                <Descriptions.Item\n                  key={item.name + idx}\n                  label={item.label}\n                  span={item.span}\n                >\n                  {item.attributes && item.attributes.isTooltip ? (\n                    <Tooltip title={content}>\n                      <div style={item.attributes && item.attributes.style}>\n                        {' '}\n                        {content}\n                        {item.attributes && item.attributes.addonAfter}\n                      </div>\n                    </Tooltip>\n                  ) : (\n                    <div style={item.attributes && item.attributes.style}>\n                      {' '}\n                      {content}\n                      {item.attributes && item.attributes.addonAfter}\n                    </div>\n                  )}\n                </Descriptions.Item>\n              )\n            );\n          })}\n        </Descriptions>\n      ) : (\n        <QucikFrom\n          {...others}\n          size=\"default\"\n          defaultFormLayout=\"vertical\"\n          header={header}\n          formDatas={formDatas}\n          colspan={colspan}\n          type={type}\n          ref={ref}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default forwardRef(FormDetail);\n","import React, { useEffect, useState } from 'react';\nimport { Button, Dropdown, Menu, Badge } from 'antd';\nimport { ButtonProps } from 'antd/es/button';\nimport { ButtonGroupProps, ButtonType } from 'antd/lib/button';\n// import { AuthorizedBtn } from '@antdp/authorized';\nimport { DownOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport './index.css';\nimport { MenuInfo } from 'rc-menu/lib/interface';\n\nexport interface ButtonGroupProProps {\n  button: Array<any>;\n  className?: string;\n}\nexport interface MenusProps extends Omit<MenuInfo, 'item'> {\n  /** 禁用 */\n  disabled?: boolean;\n  /**   */\n  label?: string | React.ReactNode;\n  /** 权限路径 */\n  path?: string;\n  item: any;\n  [k: string]: any;\n}\nexport interface MenusOptionProps\n  extends Omit<ButtonProps, 'type'>,\n  ButtonGroupProps {\n  path?: string;\n  label?: string | React.ReactNode;\n  option?: Array<MenusOptionProps>;\n  menu?: Array<MenusProps>;\n  key?: number;\n  ButtonandDropdown?: string | number;\n  type?: ButtonType;\n  render?: (...arg: any) => React.ReactNode;\n  badge?: number | string;\n}\n\nconst ButtonGroupPro = (props: ButtonGroupProProps) => {\n  const { button, className } = props;\n  const [menuDropdownLabel, setmenuDropdownLabel] = useState<{\n    label: string | React.ReactNode;\n    key?: number | undefined;\n  }>({ label: '', key: undefined });\n  const [ButtonandDropdown, setButtonandDropdown] = useState(false);\n\n  useEffect(() => {\n    button &&\n      button.length > 0 &&\n      button.map((item) => {\n        if (item.ButtonandDropdown) {\n          setButtonandDropdown(true);\n        }\n      });\n  }, []);\n\n  const handleMenuClick = (\n    menus: any,\n    idx: number | undefined,\n    e: MenuInfo,\n  ) => {\n    menus.forEach((menu: any, index: number | undefined) => {\n      if (String(index) === e?.key && menu.onClick) {\n        setmenuDropdownLabel({ label: menu.label, key: idx });\n        menu.onClick();\n      }\n    });\n  };\n\n  const renderMenu = (\n    menus: Array<MenusProps> | undefined,\n    idx: number | undefined,\n  ) => {\n    return (\n      <Menu onClick={(e: any) => handleMenuClick(menus, idx, e)}>\n        {menus &&\n          menus.length > 0 &&\n          menus.map((items: MenusProps, keys: number) => {\n            // 权限\n            if (items.path) {\n              const accessStr = sessionStorage.getItem('authBtn');\n              const access = accessStr ? JSON.parse(accessStr) : [];\n              if (!access) return null;\n              return access.includes(`${items.path}`) ? (\n                <Menu.Item key={keys} disabled={items.disabled}>\n                  {items.label}\n                </Menu.Item>\n              ) : null;\n            } else {\n              return (\n                <Menu.Item key={keys} disabled={items.disabled}>\n                  {items.label}\n                </Menu.Item>\n              );\n            }\n          })}\n      </Menu>\n    );\n  };\n\n  return (\n    <div className={classNames('antdp-ButtonGroup', className)}>\n      {button &&\n        button.length > 0 &&\n        button.map((item: MenusOptionProps, idx) => {\n          const props = {\n            key: idx,\n            size: 'middle',\n            type: item.type || 'default',\n            onClick: item.onClick,\n            disabled: item.disabled,\n            style: {\n              margin: ButtonandDropdown ? '0 0 0 -3px' : '12px 0 12px 12px',\n            },\n            ...item,\n          } as ButtonProps;\n          const buttondom = <Button {...props}>{item.label}</Button>;\n          const badgeaParams =\n            item.badge && item.badge === 'dot'\n              ? { dot: true }\n              : { count: item.badge };\n          // Menu多选菜单\n          if (item.menu && item.menu.length > 0) {\n            const DropdownButtonDom = (\n              <Button\n                size=\"middle\"\n                type={props.type || 'default'}\n                style={{\n                  margin: ButtonandDropdown ? '0 0 0 -3px' : '12px 0 12px 12px',\n                }}\n              >\n                {menuDropdownLabel.key === idx\n                  ? menuDropdownLabel.label\n                  : item.label}{' '}\n                <DownOutlined />\n              </Button>\n            );\n            return item.path ? (\n              <div key={idx}>\n                <Dropdown overlay={() => renderMenu(item.menu, idx)}>\n                  {DropdownButtonDom}\n                </Dropdown>\n              </div>\n            ) : (\n              <Dropdown overlay={() => renderMenu(item.menu, idx)} key={idx}>\n                {DropdownButtonDom}\n              </Dropdown>\n            );\n          }\n          // 自定义render\n          if (item.render) {\n            return item.path ? (\n              // <AuthorizedBtn key={idx} path={item.path}>\n                item.render(item.label)\n              // </AuthorizedBtn>\n            ) : (\n              <span key={idx}>{item.render(item.label)}</span>\n            );\n          }\n          // 单独Button\n          if (item.path) {\n            return item.badge ? (\n              // <AuthorizedBtn key={idx} path={item.path}>\n                <Badge {...badgeaParams} style={{ marginTop: '15px' }}>\n                  {buttondom}\n                </Badge>\n              // </AuthorizedBtn>\n            ) : (\n              // <AuthorizedBtn key={idx} path={item.path}>\n                buttondom\n              // </AuthorizedBtn>\n            );\n          } else {\n            return item.badge ? (\n              <span key={idx}>\n                <Badge {...badgeaParams} style={{ marginTop: '15px' }}>\n                  {buttondom}\n                </Badge>\n              </span>\n            ) : (\n              <Button {...props}>{item.label}</Button>\n            );\n          }\n        })}\n    </div>\n  );\n};\nexport default ButtonGroupPro;\n"],"names":["CardPro","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_this$props","this","props","children","className","otherProps","_objectWithoutPropertiesLoose","_excluded","_jsx","Card","_extends","classNames","Component","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Error","imagePreview","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","callback","newFile","newPreviewImage","wrap","_context","prev","next","url","preview","originFileObj","sent","image","stop","_x","_x2","type","DragableUploadListItem","originNode","moveRow","fileList","ref","useRef","index","indexOf","_useDrop","useDrop","accept","collect","monitor","dragIndex","getItem","isOver","dropClassName","drop","item","_useDrop2","_slicedToArray","_useDrop2$","_useDrag","useDrag","isDragging","drag","errorNode","Tooltip","title","style","cursor","status","_props$fileList","_useState","useState","_useState2","previewImage","setPreviewImage","useCallback","hoverIndex","dragRow","newFileList","update","$splice","onChange","onPreview","_ref2","_ref3","_jsxs","DndProvider","backend","HTML5Backend","Upload","itemRender","currFileList","Modal","open","footer","onCancel","bodyStyle","padding","destroyOnClose","width","alt","src","onSend","buttonProps","countTime","others","DEFAULT_TIME","time","setTime","_useState3","_useState4","loading","setLoading","useEffect","timer","setInterval","n","clearInterval","Fragment","display","alignItems","Input","flex","transition","marginRight","Button","size","onClick","e","preventDefault","bind","colLayout_one","xs","sm","md","lg","xl","colLayout_two","fromItemLayout_conspan_two","labelCol","span","wrapperCol","fromItemLayout_conspan_one","colLayout_third","fromItemLayout_conspan_third","colLayout_fourth","fromItemLayout_conspan_fourth","fromItemLayout_third_row","fromItemLayout_two_row","warningFunc","warning","HideContext","React","getComponents","getStoreState","setInitialValues","updateValue","getItemStore","init","register","getValue","Store","_this","store","componentLists","entery","initialValue","undefined","pathName","getNamePath","setValue","push","refresh","filter","getStore","initialValues","setValues","path","Array","isArray","notifyObservers","forEach","join","form","formRef","current","formStore","Hide","_React$Component","call","mounted","cancelRegisterFunc","name","forceUpdate","hideContent","_assertThisInitialized","getChildItemFun","childFun","getInternalHooks","HOOK_MARK","namePath","dispatch","Panel","Collapse","FormItem","Form","Option","Select","Search","RangePicker","DatePicker","MonthPicker","QuickForm","collapseAttributes","panelAttributes","_props$visible","visible","_props$type","extra","formDatas","_props$colspan","colspan","header","_props$defaultFormLay","defaultFormLayout","_props$size","defaultFormItemLayout","formHide","initialHide","_useFormItemHide","useFormItemHide","hide","rowcolspan","formitemlayout","HideFormItemDoM","FormItemDoM","i","length","hideInForm","_i","j","full","slice","defaultcolspan","CollapseFormDoM","idx","label","attributes","options","onlyimg","render","isHide","otherts","_excluded2","dataList","optionDatas","map","_idx","_excluded3","Radio","selectOption","rowcolspan_num","formitemlayout_num","defaultRowColspan","renderItem","Col","colon","componentprams","dropdownMatchSelectWidth","allowClear","placeholder","disabled","locale","TimePicker","Cascader","InputNumber","TreeSelect","option","Checkbox","checkboxLable","UploadGrid","listType","UploadOutlined","imageUrl","LoadingOutlined","PlusOutlined","maxCount","AutoComplete","InputCount","suffix","AudioOutlined","fontSize","color","hideCollapseForm","CollapseForm","it","indix","Row","FormDom","Provider","ConfigProvider","zhCN","layout","margin","Divider","defaultActiveKey","QForm","forwardRef","useHideContext","getTreeDataParent","list","objList","FormDetail","_props$formDatas","_props$isView","isView","_props$header","_props$layout","_props$bordered","bordered","_props$otherDescripti","otherDescriptions","Descriptions","marginBottom","column","content","newOptions","useDragHandle","itm","moment","format","date","values","arr","includes","_values","labelInValue","selObj","find","mode","treeData","multiple","toString","_selObj","_item$attributes","_treeData","_initialValue","_selObj2","isTooltip","addonAfter","QucikFrom","button","menuDropdownLabel","setmenuDropdownLabel","ButtonandDropdown","setButtonandDropdown","renderMenu","menus","Menu","menu","String","handleMenuClick","items","keys","accessStr","sessionStorage","access","JSON","parse","buttondom","badgeaParams","badge","dot","count","DropdownButtonDom","DownOutlined","Dropdown","overlay","Badge","marginTop"],"sourceRoot":""}