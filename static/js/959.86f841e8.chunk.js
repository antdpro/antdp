"use strict";(self.webpackChunk_example_website=self.webpackChunk_example_website||[]).push([[959],{75959:function(n,e,t){t.r(e),e.default={components:{},data:{},source:"# \u8bf7\u6c42\n\u7b80\u4ecb\n\u5bf9\u4e8e\u4e2d\u540e\u53f0\u5e94\u7528\u6765\u8bf4\uff0c\u5f88\u5927\u4e00\u90e8\u5206\u5de5\u4f5c\u5c31\u5728\u4e8e\u8bf7\u6c42\u540e\u7aef\u7684 CRUD \u7684\u63a5\u53e3\uff0c\u4e3a\u8fdb\u4e00\u6b65\u964d\u4f4e\u7528\u6237\u5bf9\u8bf7\u6c42\u5c42\u7684\u611f\u77e5\uff0c\u6211\u4eec\u79fb\u9664\u4e86\u9ed8\u8ba4\u751f\u6210\u7684 utils/request.ts \u6587\u4ef6\uff0c\u6539\u6210\u901a\u8fc7\u914d\u7f6e\u5316\u7684\u65b9\u5f0f\u66b4\u9732\u7ed9\u5f00\u53d1\u8005\u505a\u8bf7\u6c42\u7684\u914d\u7f6e\u548c\u589e\u5f3a\u5904\u7406\uff1b\u540c\u65f6\u901a\u8fc7\u4e1a\u52a1\u603b\u7ed3\u51fa\u4e00\u5957\u6807\u51c6\u7684\u63a5\u53e3\u7ed3\u6784\u89c4\u8303\uff0c\u5e76\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\u89e3\u6790\u3001\u9519\u8bef\u5904\u7406\u7684\u80fd\u529b\uff1b\u540e\u7eed\u5c06\u6301\u7eed\u5b8c\u5584\u53ef\u914d\u7f6e\u9879\u3001\u63d0\u4f9b\u5782\u76f4\u573a\u666f\u5982\u5217\u8868\u3001\u767b\u5f55\u5931\u6548\u7b49\u89e3\u51b3\u65b9\u6848\u3002\n## request\n\n\u6211\u4eec\u57fa\u4e8eumi-request\u8fdb\u884c\u4e86\u4e8c\u6b21\u5c01\u88c5\u4e86@antp/request\uff0c\u53c2\u89c1[umi-request](https://github.com/umijs/umi-request)\n\n### \u53c2\u6570\n\n| \u53c2\u6570    | \u8bf4\u660e     | \u7c7b\u578b           | \u9ed8\u8ba4\u503c |\n| :------ | :------- | :------------- | :----- |\n| url | \u8bf7\u6c42\u5730\u5740 | string        | -      |\n\n### Options\n| \u53c2\u6570    | \u8bf4\u660e     | \u7c7b\u578b           | \u9ed8\u8ba4\u503c |\n| :------ | :------- | :------------- | :----- |\n| method | \u8bf7\u6c42\u65b9\u6cd5 | `POST \\| GET`    | -      |\n| data | \u8bf7\u6c42\u4f20\u9012\u7ed9\u540e\u7aef\u7684\u53c2\u6570 | any      | -      |\n\n### \u4f7f\u7528\u65b9\u6cd5\n```js\nimport request from '@antdp/request';\nrequest('/api/user', {method:'POST' ,data: { name : 1 }})\n```\n\n### \u9875\u9762\u4e2d\u8c03\u7528\u63a5\u53e3\n#### \u914d\u5408dva\u8c03\u7528\u63a5\u53e3\n> \u5728servers/index.js\u4e2d\n```ts\nimport { request } from \"@uiw-admin/utils\"\n\nexport const selectById  = (params) => request(\"/api/selectById\",{ method:\"POST\",data: { ...params } })\n\n```\n> \u5728model/index.js\u4e2d\n```js\nimport { selectById } from '../servers';\n\nexport default {\n  namespace:'index',\n  state:{\n    name:'',\n  },\n  reducers:{\n    updateState: (state, payload) => ({\n      ...state,\n      ...payload,\n    }),\n  },\n  effects:{\n    selectById({ paylog },{ call,put }){\n      const data = yield call(selectById, payload);\n      if(data.code === 1){\n        yield put({\n          type: 'updateData',\n          paylog:{\n            name:data.data\n          }\n        })\n      }\n    }\n  }\n}\n\n```\n\n> \u5728\u9875\u9762\u4e2d\u8c03\u7528\n```jsx\nimport React from 'react';\nimport { useDispatch, useSelector } from 'dva';\n\nexport default const Index = () => {\n  const dispatch = useDispatch()\n  const { name } = useSelector(state => state.index) || {}\n  React.useEffect(()=>{\n     dispatch({\n      type: 'index/selectById',\n      payload:{ id:1 },\n    })\n  },[])\n  return <div>{name}</div>\n}\n```\n\n## umi\u5185\u7f6e request \u548c useRequest\n\u5728\u9879\u76eeconfig/config\u4e2d\u6dfb\u52a0\u5982\u4e0b \n```diff\nexport default {\n+  request: {\n+    dataField: 'data'\n+  },\n};\n```\n\u6784\u5efa\u65f6\u914d\u7f6e\u53ef\u4ee5\u4e3a useRequest \u914d\u7f6e dataField \uff0c\u8be5\u914d\u7f6e\u7684\u9ed8\u8ba4\u503c\u662f data\u3002\u8be5\u914d\u7f6e\u7684\u4e3b\u8981\u76ee\u7684\u662f\u65b9\u4fbf useRequest \u76f4\u63a5\u6d88\u8d39\u6570\u636e\u3002\u5982\u679c\u4f60\u60f3\u8981\u5728\u6d88\u8d39\u6570\u636e\u65f6\u62ff\u5230\u540e\u7aef\u7684\u539f\u59cb\u6570\u636e\uff0c\u9700\u8981\u5728\u8fd9\u91cc\u914d\u7f6e dataField \u4e3a '' \u3002\n\n\u6bd4\u5982\u4f60\u7684\u540e\u7aef\u8fd4\u56de\u7684\u6570\u636e\u683c\u5f0f\u5982\u4e0b\u3002\n\n```js\n{\n  success: true,\n  data: 123,\n  code: 1,\n}\n```\n\n\u90a3\u4e48 `useRequest` \u5c31\u53ef\u4ee5\u76f4\u63a5\u6d88\u8d39 `data`\u3002\u5176\u503c\u4e3a 123\uff0c\u800c\u4e0d\u662f `{ success, data, code }`\n\n### \u4f7f\u7528\u65b9\u6cd5\n\n\u901a\u8fc7 `import { request,useRequest } from '@umijs/max'` \u6216 `import { request } from '@@/plugin-request'`  \u4f60\u53ef\u4ee5\u4f7f\u7528umi\u5185\u7f6e\u7684\u8bf7\u6c42\u65b9\u6cd5\u3002\n\n`request` \u63a5\u6536\u7684 `options`\u9664\u4e86\u900f\u4f20 [axios](https://axios-http.com/docs/req_config) \u7684\u6240\u6709 config \u4e4b\u5916\uff0cumi\u8fd8\u989d\u5916\u6dfb\u52a0\u4e86\u51e0\u4e2a\u5c5e\u6027 `skipErrorHandler`\uff0c`getResponse`\uff0c`requestInterceptors` \u548c `responseInterceptors` \u3002\n\n\u793a\u4f8b\u5982\u4e0b\uff1a\n\n```js\nrequest('/api/user', {\n  params: { name : 1 },\n  timeout: 2000,\n  // other axios options\n  skipErrorHandler: true,\n  getResponse: false,\n  requestInterceptors: [],\n  responseInterceptors: [],\n}\n```\n\n\u5f53\u4f60\u7684\u67d0\u4e2a\u8bf7\u6c42\u60f3\u8981\u8df3\u8fc7\u9519\u8bef\u5904\u7406\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c06`skipErrorHandler`\u8bbe\u4e3a `true` \u6765\u5b9e\u73b0\n\nrequest \u9ed8\u8ba4\u8fd4\u56de\u7684\u662f\u4f60\u540e\u7aef\u7684\u6570\u636e\uff0c\u5982\u679c\u4f60\u60f3\u8981\u62ff\u5230 axios \u5b8c\u6574\u7684 response \u7ed3\u6784\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f20\u5165 `{ getResponse: true }` \u6765\u5b9e\u73b0\u3002\n\n`requestInterceptors` \u548c `responseInterceptors` \u7684\u5199\u6cd5\u540c\u8fd0\u884c\u65f6\u914d\u7f6e\u4e2d\u7684\u62e6\u622a\u5668\u5199\u6cd5\u76f8\u540c\uff0c\u5b83\u4eec\u4e3a request \u6ce8\u518c\u62e6\u622a\u5668\u3002\u533a\u522b\u5728\u4e8e\u8fd9\u91cc\u6ce8\u518c\u7684\u62e6\u622a\u5668\u662f \"\u4e00\u6b21\u6027\" \u7684\u3002\u53e6\u5916\uff0c\u8fd9\u91cc\u5199\u7684\u62e6\u622a\u5668\u4f1a\u5728\u8fd0\u884c\u65f6\u914d\u7f6e\u4e2d\u7684\u62e6\u622a\u5668\u4e4b\u540e\u88ab\u6ce8\u518c\u3002**\n\n<strong>\u6ce8\u610f\uff1a \u5f53\u4f60\u4f7f\u7528\u4e86 errorHandler \u65f6\uff0c\u5728\u8fd9\u91cc\u6ce8\u518c\u7684 response \u62e6\u622a\u5668\u4f1a\u5931\u6548\uff0c\u56e0\u4e3a\u5728 errorHandler \u5c31\u4f1a throw error</strong>\n\n### \u9875\u9762\u4e2d\u8c03\u7528\u63a5\u53e3\n\n#### \u2728\u914d\u548cuseRequest\u8c03\u7528\u63a5\u53e3\n```jsx\nimport React from 'react'\nimport { request,useRequest } from '@umijs/max';\n\nconst Index = () => {\n  const selectById  = (params) => request(\"/api/selectById\",{ method:\"POST\",data: { ...params } })\n  const [ name ,setName ] = React.useState('')\n  const { run, loading } = useRequest(selectById,\n    manual: true,\n    onSuccess: (req) => {\n      setName(req);\n    },\n  )\n\n  React.useEffect(()=>run( id:1 ),[])\n\n  return <div>{name}</div>\n}\nexport default Index\n```\n\n## react-query\n\u6211\u4eec\u57fa\u4e8ereact-query\u8fdb\u884c\u4e86\u4e8c\u6b21\u5c01\u88c5\u4e86`useReactQuery` \u548c `useReactMutation`\uff0c\u53c2\u89c1[react-query](https://tanstack.com/query/latest)\uff08\u548c @tanstack/react-query \u662f\u540c\u4e00\u4e2a\uff09\n\n### \u542f\u7528\u65b9\u5f0f\n\u7531\u4e8eumi\u5df2\u5185\u7f6e`react-query`,\u4f60\u53ea\u9700\u5728`congfig/config`\u4e2d\u914d\u7f6e\n\n```js\nreactQuery: {\n  // devtool: boolean\uff0c\u662f\u5426\u5f00\u542f react query \u5b98\u65b9 devtool \u5de5\u5177\uff0c\u9ed8\u8ba4 false\n  devtool: false,\n  // queryClient: boolean, \u662f\u5426\u6ce8\u518c\u5168\u5c40\u7684 QueryClient \u548c QueryClientProvier\uff0c\u9ed8\u8ba4 true\n  queryClient: false,\n},\n```\n\n### API \u8bf7\u6c42 hooks\n\n\u4e0b\u9762\u662f API \u8bf7\u6c42\u793a\u4f8b\uff0c\u5982 GET/POST \u8bf7\u6c42\u793a\u4f8b\n\n#### useReactQuery\n\n\u4e3b\u8981\u7528\u4e8e**\u9ed8\u8ba4**\u89e6\u53d1\u8bf7\u6c42\u6570\u636e\uff0c\u9ed8\u8ba4 `GET` \u8bf7\u6c42\uff0c\u53d8\u66f4\u4f7f\u7528 `method=\"POST\"` \u53c2\u6570\u914d\u7f6e\n\n```jsx\nuseReactQuery({ \n  queryKey: ['user', userId], \n  url: `/api/user/list?id=${userId}`\n});\n```\n\x3c!--rehype:style=background:#00de2247;border: 0;--\x3e\n\n\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46 \u4e0a\u9762\u662f**\u63a8\u8350**\u4f7f\u7528 \ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\n\n```jsx\nimport { fetchFn, useReactQuery } from '@antdp/hooks';\n\nuseReactQuery({ queryKey: ['user'], url: '/api/user/list' });\nuseReactQuery({ queryKey: ['user'], url: '/api/user/list', method: 'POST' });\nuseReactQuery({ queryKey: ['user', userId], queryFn: () => fetchFn(`/api/user/list?id=${userId}`) });\nuseReactQuery({\n  queryKey: ['user', userId],\n  queryFn: async () => {\n    return fetchFn(`/api/user/list?id=${userId}`);\n  },\n});\nuseReactQuery({\n  queryKey: ['user', userId],\n  queryFn: ({ queryKey }) => fetchFn(`/api/user/list?id=${queryKey[1]}`);,\n});\nuseReactQuery({\n  queryKey: ['user'],\n  url: '/api/user/list',\n  initialData: [....],\n});\n\nconst { isInitialLoading, isError, data, error, refetch, isFetching } = useQuery(...)\n```\n\n\u793a\u4f8b\n\n```javascript\nimport { useReactQuery } from '@antdp/hooks';\n\nexport default function HomePage() {\n  const { isLoading, isError, data } = useReactQuery({\n    url: `/api/user/list`,\n    queryKey: ['user-list'],\n  });\n\n  return (\n    <div>\n      <p className=\"title\">x react-query</p>\n      {isError && <p>\u8bf7\u6c42 API \u9519\u8bef ...</p>}\n      {isLoading && <p>Loading ...</p>}\n      {data && <p>\u73b0\u5728\u6709 {data.stargazers_count} \u9897\u661f\uff01</p>}\n    </div>\n  );\n}\n```\n\n##### Query \u9009\u9879\n\n```js\nconst { data } = useReactQuery({\n  /** \u8bbe\u7f6e Content-Type\uff0c\u9ed8\u8ba4\u503c `json`\uff0c'Content-Type' = 'application/json' */\n  contentType: \"json\" | 'form';\n  // \u8bf7\u6c42 API\n  url: '/api/user/list'\n  // \u7528\u4e8e\u6b64\u67e5\u8be2\u7684\u67e5\u8be2\u952e\u3002\u67e5\u8be2\u952e\u5c06\u88ab hash \u6210\u4e00\u4e2a\u7a33\u5b9a\u7684 hash \u3002\u5f53\u6b64\u952e\u66f4\u6539\u65f6\uff0c\u67e5\u8be2\u5c06\u81ea\u52a8\u66f4\u65b0\uff08\u53ea\u8981 enabled \u672a\u8bbe\u7f6e\u4e3a false\uff09\n  queryKey: ['user-list', userId],\n  // \u53ea\u8981\u67e5\u8be2\u6210\u529f\u83b7\u53d6\u65b0\u6570\u636e\uff0c\u6b64\u51fd\u6570\u5c31\u4f1a\u89e6\u53d1\u3002\n  onSuccess: (data: TData) => void\n  // \u5982\u679c\u67e5\u8be2\u9047\u5230\u9519\u8bef\u5e76\u5c06\u4f20\u9012\u9519\u8bef\uff0c\u5219\u6b64\u51fd\u6570\u5c06\u89e6\u53d1\u3002\n  onError: (error: TError) => void\n  // \u6bcf\u5f53\u6210\u529f\u83b7\u53d6\u67e5\u8be2\u6216\u51fa\u9519\u5e76\u4f20\u9012\u6570\u636e\u6216\u9519\u8bef\u65f6\uff0c\u6b64\u51fd\u6570\u90fd\u4f1a\u89e6\u53d1\u3002\n  onSettled: (data?: TData, error?: TError) => void\n  // \u6b64\u9009\u9879\u53ef\u7528\u4e8e\u8f6c\u6362\u6216\u9009\u62e9\u67e5\u8be2\u51fd\u6570\u8fd4\u56de\u7684\u90e8\u5206\u6570\u636e\u3002 \u5b83\u4f1a\u5f71\u54cd\u8fd4\u56de\u7684\u6570\u636e\u503c\uff0c\u4f46\u4e0d\u4f1a\u5f71\u54cd\u5b58\u50a8\u5728\u67e5\u8be2\u7f13\u5b58\u4e2d\u7684\u5185\u5bb9\u3002\n  select: (data: TData) => unknown\n  select: (dt) => {\n    // \u6539\u53d8\u8bf7\u6c42\u5230\u7684 data \u6570\u636e\uff0c\u8fd4\u56de\u90e8\u5206 data \u6570\u636e\n    return dt\n  },\n  // \u5c06\u6b64\u8bbe\u7f6e\u4e3a true \u4ee5\u542f\u7528\u6682\u505c\u6a21\u5f0f\u3002\n  // \u5f53 true \u65f6\uff0cuseQuery \u5c06\u5728 status === 'loading' \u65f6\u6682\u505c\n  // \u5f53 true \u65f6\uff0cuseQuery \u5c06\u5728 status === 'error' \u65f6\u629b\u51fa\u8fd0\u884c\u65f6\u9519\u8bef\n  suspense: true,\n  // \u5c06\u6b64\u8bbe\u7f6e\u4e3a false \u4ee5\u7981\u6b62\u6b64\u67e5\u8be2\u81ea\u52a8\u8fd0\u884c\u3002https://tanstack.com/query/v4/docs/react/guides/dependent-queries\n  // \u5728 userId \u5b58\u5728\u4e4b\u524d\uff0c\u67e5\u8be2\u4e0d\u4f1a\u6267\u884c\n  enabled: !!userId,\n  // \u5982\u679c\u4e3a false\uff0c\u5931\u8d25\u7684\u67e5\u8be2\u9ed8\u8ba4\u4e0d\u4f1a\u91cd\u8bd5\u3002\u5982\u679c\u4e3a\u771f\uff0c\u5931\u8d25\u7684\u67e5\u8be2\u5c06\u65e0\u9650\u91cd\u8bd5\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u6570\u5b57\uff0c\u4f8b\u5982 3\u3001\u5931\u8d25\u7684\u67e5\u8be2\u4f1a\u91cd\u8bd5\uff0c\u76f4\u5230\u5931\u8d25\u7684\u67e5\u8be2\u8ba1\u6570\u6ee1\u8db3\u90a3\u4e2a\u6570\n  retry: boolean | number | (failureCount: number, error: TError) => boolean\n  // \u9ed8\u8ba4\u503c\u4e3a 'online'\uff0c\u8bf7\u53c2\u9605\u7f51\u7edc\u6a21\u5f0f\uff1ahttps://tanstack.com/query/v4/docs/react/guides/network-mode\n  networkMode: 'online' | 'always' | 'offlineFirst'\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u5982\u679c\u67e5\u8be2\u5305\u542b\u9519\u8bef\uff0c\u5219\u4e0d\u4f1a\u5728\u6302\u8f7d\u65f6\u91cd\u8bd5\u3002\u9ed8\u8ba4\u4e3a\u771f\n  retryOnMount: boolean\n  // \u6b64\u51fd\u6570\u63a5\u6536\u4e00\u4e2a retryAttempt \u6574\u6570\u548c\u5b9e\u9645\u9519\u8bef\uff0c\u5e76\u8fd4\u56de\u5728\u4e0b\u4e00\u6b21\u5c1d\u8bd5\u4e4b\u524d\u5e94\u7528\u7684\u5ef6\u8fdf\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\n  // \u50cf attempt => Math.min(attempt > 1 ? 2 ** attempt * 1000 : 1000, 30 * 1000) \u8fd9\u6837\u7684\u51fd\u6570\u5e94\u7528\u6307\u6570\u9000\u907f\n  // \u50cf attempt => attempt * 1000 \u8fd9\u6837\u7684\u51fd\u6570\u5e94\u7528\u7ebf\u6027\u9000\u907f\u3002\n  retryDelay: number | (retryAttempt: number, error: TError) => number\n  // \u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u6570\u636e\u88ab\u8ba4\u4e3a\u8fc7\u65f6\u540e\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u8be5\u503c\u4ec5\u9002\u7528\u4e8e\u5b9a\u4e49\u5b83\u7684\u6302\u94a9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u201cInfinity\u201d\uff0c\u6570\u636e\u5c06\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u9648\u65e7\u7684\n  staleTime: number | Infinity\n  // \u5728 SSR \u671f\u95f4\u9ed8\u8ba4\u4e3a 5 * 60 * 1000\uff085 \u5206\u949f\uff09\u6216\u65e0\u9650\n  // \u672a\u4f7f\u7528(unused)/\u975e\u6d3b\u52a8(inactive)\u7f13\u5b58\u6570\u636e\u4fdd\u7559\u5728\u5185\u5b58\u4e2d\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u5f53\u67e5\u8be2\u7684\u7f13\u5b58\u53d8\u4e3a\u672a\u4f7f\u7528\u6216\u4e0d\u6d3b\u52a8\u65f6\uff0c\u8be5\u7f13\u5b58\u6570\u636e\u5c06\u5728\u8fd9\u6bb5\u65f6\u95f4\u540e\u88ab\u5783\u573e\u6536\u96c6\u3002 \u5f53\u6307\u5b9a\u4e0d\u540c\u7684\u7f13\u5b58\u65f6\u95f4\u65f6\uff0c\u5c06\u4f7f\u7528\u6700\u957f\u7684\u4e00\u4e2a\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a Infinity\uff0c\u5c06\u7981\u7528\u5783\u573e\u6536\u96c6\n  cacheTime: number | Infinity\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u6570\u5b57\uff0c\u6240\u6709\u67e5\u8be2\u5c06\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u4ee5\u8be5\u9891\u7387\u8fde\u7eed\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4f7f\u7528\u6700\u65b0\u7684\u6570\u636e\u6267\u884c\u5e76\u67e5\u8be2\u4ee5\u8ba1\u7b97\u9891\u7387\n  refetchInterval: number | false | ((data: TData | undefined, query: Query) => number | false)\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5219\u8bbe\u7f6e\u4e3a\u4f7f\u7528 refetchInterval \u8fde\u7eed\u91cd\u65b0\u83b7\u53d6\u7684\u67e5\u8be2\u5c06\u5728\u5176\u9009\u9879\u5361/\u7a97\u53e3\u5904\u4e8e\u540e\u53f0\u65f6\u7ee7\u7eed\u91cd\u65b0\u83b7\u53d6\n  refetchIntervalInBackground: boolean\n  // \u9ed8\u8ba4\u4e3a true\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5982\u679c\u6570\u636e\u8fc7\u65f6\uff0c\u67e5\u8be2\u5c06\u5728\u6302\u8f7d\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u67e5\u8be2\u5c06\u4e0d\u4f1a\u5728\u6302\u8f7d\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a always\uff0c\u67e5\u8be2\u5c06\u59cb\u7ec8\u5728\u6302\u8f7d\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e0e\u67e5\u8be2\u4e00\u8d77\u6267\u884c\u4ee5\u8ba1\u7b97\u503c\n  refetchOnMount: boolean | \"always\" | ((query: Query) => boolean | \"always\")\n  // \u9ed8\u8ba4\u4e3a true\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5982\u679c\u6570\u636e\u9648\u65e7\uff0c\u67e5\u8be2\u5c06\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u67e5\u8be2\u5c06\u4e0d\u4f1a\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a always\uff0c\u67e5\u8be2\u5c06\u59cb\u7ec8\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e0e\u67e5\u8be2\u4e00\u8d77\u6267\u884c\u4ee5\u8ba1\u7b97\u503c\n  refetchOnWindowFocus: boolean | \"always\" | ((query: Query) => boolean | \"always\")\n  // \u9ed8\u8ba4\u4e3a true\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a true\uff0c\u5982\u679c\u6570\u636e\u8fc7\u65f6\uff0c\u67e5\u8be2\u5c06\u5728\u91cd\u65b0\u8fde\u63a5\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u67e5\u8be2\u5c06\u4e0d\u4f1a\u5728\u91cd\u65b0\u8fde\u63a5\u65f6\u91cd\u65b0\u83b7\u53d6\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a always\uff0c\u67e5\u8be2\u5c06\u59cb\u7ec8\u91cd\u65b0\u83b7\u53d6\u7a97\u53e3\u7126\u70b9\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e0e\u67e5\u8be2\u4e00\u8d77\u6267\u884c\u4ee5\u8ba1\u7b97\u503c\n  refetchOnReconnect: boolean | \"always\" | ((query: Query) => boolean | \"always\")\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u7ec4\u4ef6\u5c06\u4ec5\u5728\u4efb\u4f55\u5217\u51fa\u7684\u5c5e\u6027\u66f4\u6539\u65f6\u91cd\u65b0\u6e32\u67d3\n  // \u4f8b\u5982\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a ['data', 'error']\uff0c\u7ec4\u4ef6\u5c06\u4ec5\u5728\u6570\u636e\u6216\u9519\u8bef\u5c5e\u6027\u66f4\u6539\u65f6\u91cd\u65b0\u5448\u73b0\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u201call\u201d\uff0c\u7ec4\u4ef6\u5c06\u9009\u62e9\u9000\u51fa\u667a\u80fd\u8ddf\u8e2a\u5e76\u5728\u66f4\u65b0\u67e5\u8be2\u65f6\u91cd\u65b0\u5448\u73b0\n  // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5c06\u8ddf\u8e2a\u5bf9\u5c5e\u6027\u7684\u8bbf\u95ee\uff0c\u5e76\u4e14\u4ec5\u5f53\u8ddf\u8e2a\u7684\u5c5e\u6027\u4e4b\u4e00\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u7ec4\u4ef6\u624d\u4f1a\u91cd\u65b0\u5448\u73b0\n  notifyOnChangeProps: string[] | \"all\"\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u6b64\u503c\u5c06\u7528\u4f5c\u67e5\u8be2\u7f13\u5b58\u7684\u521d\u59cb\u6570\u636e\uff08\u53ea\u8981\u5c1a\u672a\u521b\u5efa\u6216\u7f13\u5b58\u67e5\u8be2\uff09\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u5728\u5171\u4eab/\u6839\u67e5\u8be2\u521d\u59cb\u5316\u671f\u95f4\u88ab\u8c03\u7528\u4e00\u6b21\uff0c\u5e76\u671f\u671b\u540c\u6b65\u8fd4\u56de initialData\n  // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u521d\u59cb\u6570\u636e\u88ab\u8ba4\u4e3a\u662f\u9648\u65e7\u7684\uff0c\u9664\u975e\u8bbe\u7f6e\u4e86 staleTime\u3002\n  // initialData \u88ab\u6301\u4e45\u5316\u5230\u7f13\u5b58\n  initialData: TData | () => TData\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u8be5\u503c\u5c06\u7528\u4f5c\u4e0a\u6b21\u66f4\u65b0 initialData \u672c\u8eab\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\n  initialDataUpdatedAt: number | (() => number | undefined)\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u5f53\u67e5\u8be2\u4ecd\u5728\u52a0\u8f7d\u6570\u636e\u4e2d\u4e14\u672a\u63d0\u4f9b initialData \u65f6\uff0c\u6b64\u503c\u5c06\u7528\u4f5c\u6b64\u7279\u5b9a\u67e5\u8be2\u89c2\u5bdf\u5668\u7684\u5360\u4f4d\u7b26\u6570\u636e\u3002\n  // `placeholderData` \u4e0d\u4f1a\u6301\u4e45\u5316\u5230\u7f13\u5b58\n  placeholderData: TData | () => TData\n  // \u9ed8\u8ba4\u4e3a false \u5982\u679c\u8bbe\u7f6e\uff0c\u5219\u5728\u83b7\u53d6\u65b0\u6570\u636e\u65f6\u5c06\u4fdd\u7559\u4efb\u4f55\u4ee5\u524d\u7684\u6570\u636e\uff0c\u56e0\u4e3a\u67e5\u8be2\u952e\u5df2\u66f4\u6539\u3002\n  keepPreviousData: boolean\n  // \u9ed8\u8ba4\u4e3a true \u5982\u679c\u8bbe\u7f6e\u4e3a false\uff0c\u5c06\u7981\u7528\u67e5\u8be2\u7ed3\u679c\u4e4b\u95f4\u7684\u7ed3\u6784\u5171\u4eab\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u65e7\u6570\u636e\u503c\u548c\u65b0\u6570\u636e\u503c\u5c06\u901a\u8fc7\u8be5\u51fd\u6570\u4f20\u9012\uff0c\u8be5\u51fd\u6570\u5e94\u5c06\u5b83\u4eec\u7ec4\u5408\u6210\u89e3\u6790\u6570\u636e\u4ee5\u4f9b\u67e5\u8be2\u3002 \u8fd9\u6837\uff0c\u60a8\u53ef\u4ee5\u4fdd\u7559\u65e7\u6570\u636e\u7684\u5f15\u7528\u4ee5\u63d0\u9ad8\u6027\u80fd\uff0c\u5373\u4f7f\u8be5\u6570\u636e\u5305\u542b\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u503c\u4e5f\u662f\u5982\u6b64\n  structuralSharing: boolean | ((oldData: TData | undefined, newData: TData) => TData)\n  // \u9ed8\u8ba4\u4e3a\u5168\u5c40\u67e5\u8be2\u914d\u7f6e\u7684 useErrorBoundary \u503c\uff0c\u672a\u5b9a\u4e49\n  // \u5982\u679c\u60a8\u5e0c\u671b\u5728\u6e32\u67d3\u9636\u6bb5\u629b\u51fa\u9519\u8bef\u5e76\u4f20\u64ad\u5230\u6700\u8fd1\u7684\u9519\u8bef\u8fb9\u754c\uff0c\u8bf7\u5c06\u6b64\u8bbe\u7f6e\u4e3a true\n  // \u5c06\u6b64\u8bbe\u7f6e\u4e3a false \u4ee5\u7981\u7528 suspense \u5c06\u9519\u8bef\u629b\u51fa\u5230\u9519\u8bef\u8fb9\u754c\u7684\u9ed8\u8ba4\u884c\u4e3a\n  // \u5982\u679c\u8bbe\u7f6e\u4e3a\u51fd\u6570\uff0c\u5b83\u5c06\u4f20\u9012\u9519\u8bef\u548c\u67e5\u8be2\uff0c\u5b83\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u6307\u793a\u662f\u5728\u9519\u8bef\u8fb9\u754c\u4e2d\u663e\u793a\u9519\u8bef (true) \u8fd8\u662f\u5c06\u9519\u8bef\u4f5c\u4e3a\u72b6\u6001\u8fd4\u56de (false)\n  useErrorBoundary: undefined | boolean | (error: TError, query: Query) => boolean\n  // \u5982\u679c\u8bbe\u7f6e\uff0c\u5219\u5b58\u50a8\u6709\u5173\u67e5\u8be2\u7f13\u5b58\u6761\u76ee\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u53ef\u6839\u636e\u9700\u8981\u4f7f\u7528\u3002 \u53ea\u8981\u67e5\u8be2\u53ef\u7528\uff0c\u5b83\u5c31\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5b83\u4e5f\u662f\u63d0\u4f9b\u7ed9 queryFn \u7684 QueryFunctionContext \u7684\u4e00\u90e8\u5206\n  meta: Record<string, unknown>\n  // \u4f7f\u7528\u5b83\u6765\u4f7f\u7528\u81ea\u5b9a\u4e49 React \u67e5\u8be2\u4e0a\u4e0b\u6587\u3002 \u5426\u5219\uff0c\u5c06\u4f7f\u7528 defaultContext\n  context: React.Context<QueryClient | undefined>\n});\n```\n\n##### Fetch \u9009\u9879\n\n\u8bf7\u6c42 `fetch` \u76f8\u5173\u53c2\u6570 \n\n```js\nconst { data } = useReactQuery({\n  /** \u7528\u4e8e\u8bbe\u7f6e\u8bf7\u6c42\u6b63\u6587\u7684 BodyInit \u5bf9\u8c61\u6216 null\u3002*/\n  body?: BodyInit | null;\n  /** \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u793a\u8bf7\u6c42\u5c06\u5982\u4f55\u4e0e\u6d4f\u89c8\u5668\u7684\u7f13\u5b58\u4ea4\u4e92\u4ee5\u8bbe\u7f6e\u8bf7\u6c42\u7684\u7f13\u5b58\u3002*/\n  cache?: RequestCache;\n  /** \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u793a\u51ed\u636e\u662f\u59cb\u7ec8\u3001\u4ece\u4e0d\u8fd8\u662f\u4ec5\u5728\u53d1\u9001\u5230\u540c\u6e90 URL \u65f6\u968f\u8bf7\u6c42\u4e00\u8d77\u53d1\u9001\u3002 \u8bbe\u7f6e\u8bf7\u6c42\u7684\u51ed\u636e\u3002*/\n  credentials?: RequestCredentials;\n  /** Headers \u5bf9\u8c61\u3001\u5bf9\u8c61\u5b57\u9762\u91cf\u6216\u5305\u542b\u4e24\u9879\u7684\u6570\u7ec4\uff0c\u7528\u4e8e\u8bbe\u7f6e\u8bf7\u6c42\u7684\u6807\u5934\u3002*/\n  headers?: HeadersInit;\n  /** \u8981\u6309\u8bf7\u6c42\u83b7\u53d6\u7684\u8d44\u6e90\u7684\u52a0\u5bc6\u54c8\u5e0c\u3002 \u8bbe\u7f6e\u8bf7\u6c42\u7684\u5b8c\u6574\u6027\u3002*/\n  integrity?: string;\n  /** \u8bbe\u7f6e\u8bf7\u6c42\u7684\u4fdd\u6d3b\u7684\u5e03\u5c14\u503c\u3002*/\n  keepalive?: boolean;\n  /** \u8bbe\u7f6e\u8bf7\u6c42\u65b9\u6cd5\u7684\u5b57\u7b26\u4e32\u3002(GET|POST|PUT....)*/\n  method?: string;\n  /** \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u793a\u8bf7\u6c42\u662f\u4f7f\u7528 CORS\uff0c\u8fd8\u662f\u4ec5\u9650\u4e8e\u540c\u6e90 URL\u3002 \u8bbe\u7f6e\u8bf7\u6c42\u7684\u6a21\u5f0f\u3002*/\n  mode?: RequestMode;\n  /** \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u793a\u8bf7\u6c42\u662f\u5426\u9075\u5faa\u91cd\u5b9a\u5411\u3001\u5728\u9047\u5230\u91cd\u5b9a\u5411\u65f6\u5bfc\u81f4\u9519\u8bef\u6216\u8fd4\u56de\u91cd\u5b9a\u5411\uff08\u4ee5\u4e0d\u900f\u660e\u7684\u65b9\u5f0f\uff09\u3002 \u653es request's redirect. */\n  redirect?: RequestRedirect;\n  /** \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u503c\u4e3a\u540c\u6e90 URL\u3001\u201cabout:client\u201d\u6216\u7a7a\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u8bbe\u7f6e\u8bf7\u6c42\u7684\u5f15\u8350\u6765\u6e90\u7f51\u5740\u3002*/\n  referrer?: string;\n  /** \u8bbe\u7f6e\u8bf7\u6c42\u7684 referrerPolicy \u7684\u5f15\u7528\u7b56\u7565\u3002*/\n  referrerPolicy?: ReferrerPolicy;\n  /** \u7528\u4e8e\u8bbe\u7f6e\u8bf7\u6c42\u4fe1\u53f7\u7684 AbortSignal\u3002*/\n  signal?: AbortSignal | null;\n  /** \u53ea\u80fd\u4e3a\u7a7a\u3002 \u7528\u4e8e\u89e3\u9664\u6765\u81ea\u4efb\u4f55\u7a97\u53e3\u7684\u8bf7\u6c42\u3002*/\n  window?: null;\n});\n```\n\n#### useReactMutation\n\n\u7528\u4e8e\u89e6\u53d1\u7684 `API` \u8bf7\u6c42\n\n```jsx\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  url: '/api/login'\n});\n```\n\x3c!--rehype:style=background:#00de2247;border: 0;--\x3e\n\n\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46 \u4e0a\u9762\u662f**\u63a8\u8350**\u4f7f\u7528\uff0c**dataForm** \u7528\u4e8e\u7ed9 `body` \u4f20\u9012\u7684 *json* \u6570\u636e \ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\ud83d\udc46\n\n```javascript\nimport { fetchFn, useReactMutation } from '@antdp/hooks';\n\nuseReactMutation({ mutationKey: ['user'], url: '/api/login' });\nuseReactMutation({ mutationKey: ['user'], url: '/api/login', method: 'PUT' });\nuseReactMutation({ mutationKey: ['user', dataForm], url: '/api/login' });\nuseReactMutation({\n  mutationKey: ['user', dataForm], \n  mutationFn: () => fetchFn(`/api/login?id=${dataForm.userId}`, { method: 'PUT' })\n});\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  mutationFn: () => fetchFn('/api/login', { method: 'POST', body: JSON.stringify(dataForm) }),\n});\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  mutationFn: async () => {\n    return fetchFn(`/api/login?id=${dataForm.username}`, { method: 'DELETE', body: JSON.stringify(dataForm) });\n  },\n});\nuseReactMutation({\n  mutationKey: ['user', dataForm],\n  mutationFn: (data) => {\n    return fetchFn(`/api/login`, { method: 'POST', body: JSON.stringify(data) })\n  },\n});\n```\n\n**\u767b\u5f55\u9875\u9762**\u793a\u4f8b\n\n```javascript\nimport UserLogin from '@antdp/user-login';\nimport { useReactMutation } from '@antdp/hooks';\n\nconst UserLayout = (props) => {\n  const mutation = useReactMutation({ url: '/api/users/login' });\n  return (\n      <UserLogin\n        projectName=\"Antdp\"\n        onFinish={async (values) => {\n          const { code, token, data } = await mutation.mutateAsync(values);\n          // \u8bf7\u6c42\u6210\u529f\u540e\u64cd\u4f5c\n        }}\n        type=\"account\"\n        loading={mutation.loading}\n        formBtns={[\n          {\n            label: '\u767b\u5f55',\n            attr: {\n              type: 'primary',\n              htmlType: 'submit',\n              style: {\n                marginRight: 20,\n              },\n            },\n          },\n          {\n            label: '\u91cd\u7f6e',\n            attr: {\n              type: 'primary',\n            },\n          },\n        ]}\n      >\n      </UserLogin>\n  );\n};\n\nexport default UserLayout;\n\n```\n\n\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u523b\uff0c`mutation` \u53ea\u80fd\u5904\u4e8e\u4ee5\u4e0b\u72b6\u6001\u4e4b\u4e00\uff1a\n\n- `isIdle` or `status === 'idle'` - mutation \u5f53\u524d\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u6216\u5904\u4e8e\u65b0\u9c9c/\u91cd\u7f6e\u72b6\u6001\n- `isLoading` or `status === 'loading'` - mutation \u5f53\u524d\u6b63\u5728\u8fd0\u884c\n- `isError` or `status === 'error'` - mutation \u9047\u5230\u9519\u8bef\n- `isSuccess` or `status === 'success'` - mutation \u6210\u529f\u5e76\u4e14 mutation \u6570\u636e\u53ef\u7528\n\n\u9664\u4e86\u8fd9\u4e9b\u4e3b\u8981\u72b6\u6001\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u6839\u636e `mutation` \u72b6\u6001\u83b7\u5f97\u66f4\u591a\u4fe1\u606f\uff1a\n\n- `error` - \u5982\u679c mutation \u5904\u4e8e\u9519\u8bef\u72b6\u6001\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 error \u5c5e\u6027\u83b7\u5f97\u9519\u8bef\u3002\n- `data` - \u5982\u679c mutation \u5904\u4e8e\u6210\u529f\u72b6\u6001\uff0c\u5219\u6570\u636e\u53ef\u901a\u8fc7 data \u5c5e\u6027\u83b7\u5f97\u3002\n\n```javascript\nconst mutation = useReactMutation({\n  url: '/api/login',\n  mutationKey: ['user-login', data],\n  method: 'PUT'\n});\n```\n\n##### \u526f\u4f5c\u7528 mutation \u9009\u9879\n\n```js\nconst mutation = useReactMutation({\n  url: '/api/login',\n  onMutate: (variables) => {\n    // mutation \u5373\u5c06\u53d1\u751f\uff01\n    \n    // \u53ef\u9009\u5730\u8fd4\u56de\u5305\u542b\u6570\u636e\u7684\u4e0a\u4e0b\u6587\uff0c\u4f8b\u5982\u5728\u56de\u6eda\u65f6\u4f7f\u7528\n    return { id: 1 }\n  },\n  onError: (error, variables, context) => {\n    // \u53d1\u751f\u9519\u8bef\uff01\n    console.log(`rolling back optimistic update with id ${context.id}`)\n  },\n  onSuccess: (data, variables, context) => {\n    // Boom baby!\n  },\n  onSettled: (data, error, variables, context) => {\n    // \u9519\u8bef\u6216\u6210\u529f......\u6ca1\u5173\u7cfb\uff01\n  },\n})\n```\n\n\u60a8\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u5728\u8c03\u7528 `mutate` \u65f6\uff0c\u60a8\u60f3\u8981\u89e6\u53d1\u9664 `useReactMutation` \u4e0a\u5b9a\u4e49\u7684\u56de\u8c03\u4e4b\u5916\u7684\u5176\u4ed6\u56de\u8c03\u3002 \u8fd9\u53ef\u7528\u4e8e\u89e6\u53d1\u7ec4\u4ef6\u7279\u5b9a\u7684\u526f\u4f5c\u7528\u3002 \u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u5728 `mutate` \u53d8\u91cf\u4e4b\u540e\u5411 `mutate` \u51fd\u6570\u63d0\u4f9b\u4efb\u4f55\u76f8\u540c\u7684\u56de\u8c03\u9009\u9879\u3002 \u652f\u6301\u7684\u9009\u9879\u5305\u62ec\uff1a`onSuccess`\u3001`onError` \u548c `onSettled`\u3002 \u8bf7\u8bb0\u4f4f\uff0c\u5982\u679c\u60a8\u7684\u7ec4\u4ef6\u5728\u53d8\u66f4\u5b8c\u6210\u4e4b\u524d\u5378\u8f7d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u989d\u5916\u7684\u56de\u8c03\u5c06\u4e0d\u4f1a\u8fd0\u884c\u3002\n\n```js\nmutation.mutate(todo, {\n  onSuccess: (data, variables, context) => {\n    // I will fire second!\n  },\n  onError: (error, variables, context) => {\n    // I will fire second!\n  },\n  onSettled: (data, error, variables, context) => {\n    // I will fire second!\n  },\n})\n```\n\n### Query Keys\n\nTanStack Query \u7684\u6838\u5fc3\u662f\u57fa\u4e8e\u67e5\u8be2\u952e\u4e3a\u60a8\u7ba1\u7406\u67e5\u8be2\u7f13\u5b58\u3002\u67e5\u8be2\u952e\u5fc5\u987b\u662f\u9876\u5c42\u7684\u6570\u7ec4\uff0c\u5e76\u4e14\u53ef\u4ee5\u50cf\u5177\u6709\u5355\u4e2a\u5b57\u7b26\u4e32\u7684\u6570\u7ec4\u4e00\u6837\u7b80\u5355\uff0c\u4e5f\u53ef\u4ee5\u50cf\u5305\u542b\u8bb8\u591a\u5b57\u7b26\u4e32\u548c\u5d4c\u5957\u5bf9\u8c61\u7684\u6570\u7ec4\u4e00\u6837\u590d\u6742\u3002 \u53ea\u8981\u67e5\u8be2\u952e\u662f\u53ef\u5e8f\u5217\u5316\u7684\uff0c\u5e76\u4e14\u5bf9\u4e8e\u67e5\u8be2\u6570\u636e\u662f\u552f\u4e00\u7684\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u5b83\uff01\n\n```js\nuseReactQuery({\n  url: `https://api.example.com/users?status=${status}&page=${page}`,\n  queryKey: ['use-list', { status, page }],\n});\n```\n\n### \u8bf7\u6c42\u91cd\u8bd5\n\n```js\nconst { isLoading, isError, data } = useReactQuery({\n  url: `/api/user/list?id=${userId}`,\n  queryKey: ['user-list', userId],\n  retry: 10, // \u5728\u663e\u793a\u9519\u8bef\u4e4b\u524d\u5c06\u91cd\u8bd5\u5931\u8d25\u7684\u8bf7\u6c42 10 \u6b21\n});\n```\n\n\n\n## License\n\nLicensed under the MIT License."}}}]);
//# sourceMappingURL=959.86f841e8.chunk.js.map